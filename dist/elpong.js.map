{"version":3,"sources":["webpack://elpong/webpack/universalModuleDefinition","webpack://elpong/webpack/bootstrap","webpack://elpong/./src/Errors.ts","webpack://elpong/./src/Util.ts","webpack://elpong/./src/Element.ts","webpack://elpong/./src/Helpers/CollectionHelper.ts","webpack://elpong/./src/Ajax.ts","webpack://elpong/./src/Helpers/UrlHelper.ts","webpack://elpong/./src/Helpers/SchemeHelper.ts","webpack://elpong/./src/elpong.ts","webpack://elpong/./src/Scheme.ts","webpack://elpong/./src/Collection.ts","webpack://elpong/./src/Helpers/ElementHelper.ts","webpack://elpong/./src/Helpers/Element/Fields/EmbeddedCollection.ts","webpack://elpong/./src/Helpers/Element/Fields/EmbeddedElement.ts","webpack://elpong/./src/Helpers/Element/Relations/HasMany.ts","webpack://elpong/./src/Snapshot.ts","webpack://elpong/./src/Configuration.ts","webpack://elpong/./src/main.ts","webpack://elpong/./src/Helpers/Element/Actions.ts","webpack://elpong/./src/Helpers/Element/Fields.ts","webpack://elpong/./src/Helpers/Element/Relations.ts","webpack://elpong/./src/Helpers/Element/Relations/BelongsTo.ts","webpack://elpong/./src/Helpers/Element/Relations/HasOne.ts","webpack://elpong/./src/Helpers/Element/Snapshots.ts","webpack://elpong/./src/FakeThings.ts","webpack://elpong/./src/Helpers/Collection/CollectionActions.ts"],"names":[],"mappings":"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","file":"elpong.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"elpong\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elpong\"] = factory();\n\telse\n\t\troot[\"elpong\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","declare var DEBUG: boolean;\n/* tslint:disable */ \nif (typeof DEBUG === 'undefined') {\n  var DEBUG = true;\n}\n/* tslint:enable */\n\nexport const enum ElpongErrorType {\n  SCHNFO,\n  COLNFO,\n  COLNFS,\n  COLEXI,\n  ELPNST,\n  ELPNCE,\n  ELPNDC,\n  CNFNSL,\n  CNFNNA,\n  ELENEW,\n  ELENNW,\n  ELESNA,\n  ELESNE,\n  APINUR,\n  FLDNSA,\n  ELESCH,\n  ELESNF,\n  ELESTI,\n  ELEAFW,\n  ELESNM,\n  ELENOS,\n  AJXHCT,\n  AJXGDA\n}\n\nlet errorTextMap: { [key: number]: string };\nif (DEBUG) {\n  errorTextMap = {\n    [ElpongErrorType.SCHNFO]: 'Scheme not found',\n    [ElpongErrorType.COLNFO]: 'Collection not found',\n    [ElpongErrorType.COLNFS]: 'Collection not found by singular name',\n    [ElpongErrorType.COLEXI]: 'Collection with name already exists in scheme',\n    [ElpongErrorType.ELPNST]: 'No scheme tags found',\n    [ElpongErrorType.ELPNCE]: 'No collection or element tags found',\n    [ElpongErrorType.ELPNDC]: 'No document',\n    [ElpongErrorType.CNFNSL]: 'Configuration has no selector',\n    [ElpongErrorType.CNFNNA]: 'Configuration has no name',\n    [ElpongErrorType.ELENEW]: 'Element is new',\n    [ElpongErrorType.ELENNW]: 'Element is not new',\n    [ElpongErrorType.ELESNA]: 'Element has a selector value but is in new_elements array',\n    [ElpongErrorType.COLNFS]: 'Element has no selector value but is in elements object',\n    [ElpongErrorType.APINUR]: 'Api url has not yet been set',\n    [ElpongErrorType.FLDNSA]: 'Field should be an array of selectors',\n    [ElpongErrorType.ELESCH]: 'Element selector changed',\n    [ElpongErrorType.ELESNF]: 'Snapshot not found',\n    [ElpongErrorType.ELESTI]: 'Invalid snapshot identifier: must be number <= list.length, string or RegExp',\n    [ElpongErrorType.ELEAFW]: 'Pre element has an reference field that does not match the embedded element selector',\n    [ElpongErrorType.ELESNM]: 'Selector is not matching get one request selector',\n    [ElpongErrorType.ELENOS]: 'No selector value given in getOne action',\n    [ElpongErrorType.AJXHCT]: 'Content-Type header not set to application/json',\n    [ElpongErrorType.AJXGDA]: 'GET request can\\'t have data. Use params'\n  };\n}\n\nexport class ElpongError extends Error {\n  constructor(message: ElpongErrorType, argument?: string) {\n    const actualMessage = errorTextMap[message] ? errorTextMap[message] : `Error code ${message}`;\n    if (argument) {\n      super(`${actualMessage}: ${argument}`);\n    } else {\n      super(actualMessage);\n    }\n  }\n}\n","import { FakeArrayConstructor, FakeString } from './FakeThings';\n\n// BREAK: new Object(),\n// kebab: (string: string): string => {\n//   return string.toLowerCase().replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').replace(/(é|ë)/g, 'e').split(' ').join('-');\n// },\n\nexport function capitalize(string: string): string {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function camelize(string: string): string {\n  return string.replace(/_/g, ' ').replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (letter: string, index: number) => {\n    if (index === 0) { return letter.toLowerCase(); } else { return letter.toUpperCase(); }\n  }).replace(/\\s+/g, '');\n}\n\n// arrayDiff: (array1: any[], array2: any[]): any[] => {\n//   return array1.filter(i => array2.indexOf(i) < 0);\n// },\n\nexport function removeFromArray(array: any[], element: any): boolean {\n  const i = array.indexOf(element);\n  if (i === -1) {\n    return false;\n  } else {\n    array.splice(i, i + 1);\n    return true;\n  }\n}\n\n// copy: (obj: Object) => {\n//   if (typeof obj !== 'object') {\n//     return obj;\n//   }\n//   let copy = obj.constructor();\n//   for (let attr in obj) {\n//     if (obj.hasOwnProperty(attr)) {\n//       copy[attr] = obj[attr];\n//     }\n//   }\n//   return copy;\n// },\n// merge: (obj1: Object, obj2: Object): Object => {\n//   for (let attr in obj2) {\n//     obj1[attr] = obj2[attr];\n//   }\n//   return obj1;\n// },\n\nexport function isInteger(value: any): value is number {\n  return value === parseInt(value, 10);\n}\n\nexport function isNumber(value: any): value is number {\n  return isFinite(value) && !isNaN(parseFloat(value));\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isRegExp(value: any): value is RegExp {\n  return Object.prototype.toString.call(value) === '[object RegExp]';\n}\n\nexport function forEach(o: object, fn: (v: any, k: string) => void): void {\n  for (const k in o) {\n    if (!o.hasOwnProperty(k)) continue;\n    const v = o[k];\n    fn(v, k);\n    // if (f(v, k) === Util.BREAK) {\n    //   break;\n    // }\n  }\n}\n\n// reverseForEach: (obj: Object, f: (k: string, v: any) => void): void => {\n//   let arr: string[] = [];\n//   let _break = false;\n//   for (let key in obj) {\n//     // add hasOwnPropertyCheck if needed\n//     arr.push(key);\n//   }\n//   let i = arr.length - 1;\n//   while ((i >= 0) && !_break) {\n//     let v = f.call(obj, arr[i], obj[arr[i]]);\n//     if (v === Util.BREAK) { _break = true; }\n//     i--;\n//   }\n// },\n\nexport function endsWith(string: string, search: string): boolean {\n  if ((string as any as FakeString).endsWith) {\n    return (string as any as FakeString).endsWith(search);\n  } else {\n    return string.substr(-search.length) === search;\n  }\n}\n\nexport function startsWith(string: string, search: string): boolean {\n  if ((string as any as FakeString).startsWith) {\n    return (string as any as FakeString).startsWith(search);\n  } else {\n    return string.substr(0, search.length) === search;\n  }\n}\n\nexport function arrayFromHTML(nodeList: NodeListOf<HTMLElement>): HTMLElement[] {\n  if ((Array as any as FakeArrayConstructor).from) {\n    return (Array as any as FakeArrayConstructor).from(nodeList);\n  } else {\n    return [].slice.call(nodeList);\n  }\n}\n\nexport function values(obj: object): any[] {\n  const vals: any[] = [];\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj.propertyIsEnumerable(key)) {\n      vals.push(obj[key]);\n    }\n  }\n  return vals;\n}\n\nexport function includes(a: any[], b: any): boolean {\n  return a.indexOf(b) > -1;\n}\n\nexport function equalsJSON(a: any, b: any): boolean {\n  for (const k in a) {\n    const v1 = a[k];\n    const v2 = b[k];\n    if (typeof v1 === 'object') {\n      if (!equalsJSON(v1, v2)) {\n        return false;\n      }\n    } else {\n      if (v1 !== v2) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function copyJSON(o: any): any {\n  return JSON.parse(JSON.stringify(o));\n}\n","import { AjaxPromise } from './Ajax';\nimport { Collection } from './Collection';\nimport { EmbeddedCollectionFieldConfiguration, EmbeddedElementFieldConfiguration, FieldConfiguration } from './Configuration';\nimport { ElpongError, ElpongErrorType } from './Errors';\nimport { ActionOptions, setup as actionsSetup } from './Helpers/Element/Actions';\nimport { setup as fieldsSetup } from './Helpers/Element/Fields';\nimport { handle as embeddedCollectionHandle } from './Helpers/Element/Fields/EmbeddedCollection';\nimport { handle as embeddedElementHandle } from './Helpers/Element/Fields/EmbeddedElement';\nimport { setup as relationsSetup } from './Helpers/Element/Relations';\nimport { setup as snapshotsSetup } from './Helpers/Element/Snapshots';\nimport { PreElement } from './PreElement';\nimport { Snapshot } from './Snapshot';\nimport { forEach, includes, removeFromArray } from './Util';\n\nexport type SelectorValue = string | number;\n\nexport function isSelectorValue(v: any): v is SelectorValue {\n  return (!!v || v === 0 || v === '') && (typeof v === 'string' || typeof v === 'number');\n}\n\nexport interface Fields {\n  [fieldKey: string]: any;\n}\n\nexport type RelationFunction = () => Element | Element[] | null | undefined;\n\nexport interface Relations {\n  [relationFunctionName: string]: RelationFunction;\n}\n\nexport type ActionFunction = (actionOptions?: ActionOptions) => AjaxPromise;\n\nexport interface Actions {\n  get: ActionFunction;\n  post: ActionFunction;\n  put: ActionFunction;\n  delete: ActionFunction;\n  [actionName: string]: ActionFunction;\n}\n\nexport interface Snapshots {\n  make: (tag?: string) => void;\n  list: Snapshot[];\n  currentIndex: number;\n  undo: (identifier: number | string | RegExp) => Element;\n  lastPersisted: () => Snapshot | undefined;\n  lastWithTag: (tag: string | RegExp) => Snapshot | undefined;\n  last: () => Snapshot | undefined;\n  isPersisted: () => boolean;\n}\n\nexport class Element {\n  readonly _collection: Collection;\n  readonly fields: Fields = {} as Fields;\n  readonly relations: Relations = {} as Relations;\n  readonly actions: Actions = {} as Actions;\n  readonly snapshots: Snapshots = {} as Snapshots;\n\n  constructor(collection: Collection, preElement: PreElement) {\n    this._collection = collection;\n\n    const collectionConfig = collection.configuration();\n\n    fieldsSetup(this, collectionConfig.fields, preElement);\n    relationsSetup(this, collectionConfig.relations);\n    actionsSetup(this, collectionConfig.actions);\n    snapshotsSetup(this);\n\n    this.snapshots.make('creation');\n  }\n\n  collection(): Collection {\n    return this._collection;\n  }\n\n  selector(): SelectorValue | undefined {\n    return this.fields[this.collection().scheme().configuration().selector];\n  }\n\n  remove() {\n    const selectorValue: SelectorValue | undefined = this.selector();\n    if (selectorValue !== undefined) {\n      return this.actions.delete().then(() => {\n        const elements = this.collection().elements;\n        elements.delete(selectorValue);\n      });\n    } else {\n      removeFromArray(this.collection().newElements, this);\n      return {\n        then(fn: () => any) { return fn(); },\n        catch() { return; }\n      };\n    }\n  }\n\n  save(): AjaxPromise {\n    if (this.isNew()) {\n      return this.actions.post();\n    } else {\n      return this.actions.put();\n    }\n  }\n\n  isNew(): boolean {\n    if (includes(this.collection().newElements, this)) {\n      if (this.selector()) {\n        throw new ElpongError(ElpongErrorType.ELESNA);\n      } else {\n        return true;\n      }\n    } else {\n      if (!this.selector()) {\n        throw new ElpongError(ElpongErrorType.ELESNE);\n      } else {\n        return false;\n      }\n    }\n  }\n\n  merge(preElement: PreElement): this {\n    const collectionConfig = this.collection().configuration();\n    const selectorKey = this.collection().scheme().configuration().selector;\n    forEach(collectionConfig.fields, (fieldConfig: FieldConfiguration, fieldKey: string) => {\n      const fieldValue = preElement[fieldKey] ;\n      if (fieldValue) {\n        if (fieldConfig.embedded_element) {\n          embeddedElementHandle(this, preElement, fieldKey, fieldConfig as EmbeddedElementFieldConfiguration);\n        } else if (fieldConfig.embedded_collection) {\n          embeddedCollectionHandle(this, preElement, fieldKey, fieldConfig as EmbeddedCollectionFieldConfiguration);\n        } else if (fieldKey === selectorKey) {\n          const selectorValue = this.fields[fieldKey];\n          if ((selectorValue !== fieldValue) && isSelectorValue(selectorValue) && isSelectorValue(fieldValue)) {\n            throw new ElpongError(ElpongErrorType.ELESCH, `${selectorValue} -> ${fieldValue}`);\n          }\n          this.fields[fieldKey] = fieldValue;\n        } else {\n          this.fields[fieldKey] = fieldValue;\n        }\n      }\n    });\n    return this;\n  }\n\n  // isPersisted() {\n  //   if (this.isNew()) { return false; }\n  //   let { data } = this.snapshots.getLastPersisted();\n  //   let object = HPP.Helpers.Element.getFields(this);\n  //   for (let k in object) {\n  //     let v = object[k];\n  //     if (data[k] !== v) { return false; }\n  //   }\n  //   return true;\n  // }\n}\n","import { Collection } from '../Collection';\nimport { CollectionConfiguration } from '../Configuration';\nimport { Element } from '../Element';\n\nexport function getConfiguration(collection: Collection): CollectionConfiguration {\n  return collection.scheme().configuration().collections[collection.name];\n}\n\nexport function getSingularName(collection: Collection): string {\n  return getConfiguration(collection).singular; // Last char cut in Configuration\n}\n\nexport function addElement(collection: Collection, element: Element): void {\n  const selectorValue = element.selector();\n  if (selectorValue !== undefined) {\n    collection.elements.set(selectorValue, element);\n  } else {\n    collection.newElements.push(element);\n  }\n}\n","/// <reference types=\"jquery\"/>\n/// <reference types=\"angular\"/>\n\nimport { ElpongError, ElpongErrorType } from './Errors';\nimport { isInteger } from './Util';\n\nexport type AjaxPromiseThenOnResolveFunction = (response: AjaxResponse) => void;\nexport type AjaxPromiseThenFunction = (resolveFn: AjaxPromiseThenOnResolveFunction) => any;\n\nexport type AjaxPromise = Promise<AjaxResponse>;\n\nexport interface AjaxResponse extends Response {\n  data?: any;\n}\n\nexport type AjaxExternalFunction = () => any | object;\nexport type AjaxFunction = (url: string, instruction: AjaxInstruction) => AjaxPromise;\n\nexport interface AjaxObject {\n  data: {};\n}\n\nexport interface AjaxInstruction {\n  data: {};\n  method: string;\n  headers: {};\n  [prop: string]: any;\n}\n\nexport type AjaxData = any;\n\nexport interface AjaxHeaders {\n  [name: string]: string;\n}\n\nexport interface AjaxFunctionOptions {\n  method: string;\n  type: string;\n  url: string;\n  data: string;\n  body: string;\n  headers: AjaxHeaders;\n  dataType: 'json';\n  responseType: 'json';\n}\n\nexport const enum AjaxAdapterType {\n  AngularJS = 0,\n  Fetch = 1,\n  Angular = 2,\n  JQuery = 3\n}\n\nexport type AjaxAdapterTypeString = 'fetch' | 'angular' | 'angularjs' | 'jquery';\n\nlet ajaxFunction: AjaxFunction;\n\nexport function executeRequest(url: string, method: string, data?: AjaxData, headers?: AjaxHeaders) {\n  if (!headers) { headers = {}; }\n  headers.Accept = headers['Content-Type'] = 'application/json';\n  const serializedData = JSON.stringify(data === undefined ? {} : data);\n  const options: AjaxFunctionOptions = {\n    body: serializedData,\n    data: serializedData,\n    dataType: 'json',\n    headers,\n    method,\n    responseType: 'json',\n    type: method,\n    url\n  };\n  return ajaxFunction(options.url, options);\n}\n\n// Set the http function used for requests\n// The function should accept one object with keys\n// method, url, params, headers\n// and return a promise-like object\n// with then and catch\n//\n// @note Like $http or jQuery.ajax or http.request or fetch\n// @param {Function} fn The function.\n// @param {string} type The function.\nexport function setAjaxFunction(fn: AjaxExternalFunction, adapterType?: AjaxAdapterType | AjaxAdapterTypeString) {\n  const type = convertAjaxAdapterTypeStringToType(adapterType);\n  switch (type) {\n    case AjaxAdapterType.JQuery:\n      if ((window as any).jQuery) {\n        ajaxFunction = (url: string, instruction: AjaxInstruction) => {\n          const deferred = jQuery.Deferred();\n          const ajax = (fn as (url: string, instruction: object) => any)(url, instruction);\n          ajax.then((data: any, status: any, jqxhr: any) => deferred.resolve({data, status: jqxhr.statusCode().status, headers: jqxhr.getAllResponseHeaders()}));\n          ajax.catch((data: any, status: any, jqxhr: any) => deferred.reject({data, status: jqxhr.statusCode().status, headers: jqxhr.getAllResponseHeaders()}));\n          // Convert to Promise, as Typescript users are probably not using jQuery\n          // and if so, they won't have a lot of trouble with the differences.\n          return deferred.promise() as any as Promise<any>;\n        };\n      }\n      break;\n    case AjaxAdapterType.Fetch:\n      ajaxFunction = (url: string, instruction: AjaxInstruction) => {\n        return new Promise((resolve, reject) => {\n          // Request with GET/HEAD method cannot have body\n          (instruction as any).body = (instruction.method === 'GET') ? undefined : instruction.data;\n\n          // TODO: check fn types\n          const httpPromise = (fn as (url: string, instruction: object) => any)(url, instruction) as Promise<Response>;\n          httpPromise.then((response: Response) => {\n            if (response.status === 204) {\n              resolve(response);\n            } else {\n              const contentType = response.headers.get('content-type');\n              if (!contentType || contentType.indexOf('json') < 0) { throw new ElpongError(ElpongErrorType.AJXHCT); }\n              const jsonPromise = response.json();\n              jsonPromise.then((json: string) => {\n                (response as any).data = json;\n                resolve(response);\n              });\n              jsonPromise.catch(reject);\n            }\n          });\n          httpPromise.catch(reject);\n        });\n      };\n      break;\n    case AjaxAdapterType.Angular:\n      ajaxFunction = (url: string, instruction: AjaxInstruction) => {\n        return new Promise<AjaxResponse>((resolve, reject) => {\n          instruction.responseType = undefined;\n          (fn as any).request.bind(fn)(url, instruction).subscribe((response: any) => {\n            if (response.status === 204) {\n              resolve(response);\n            } else {\n              const contentType = response.headers.get('content-type');\n              if (!contentType || contentType.indexOf('json') < 0) { throw new ElpongError(ElpongErrorType.AJXHCT); }\n              const json = response.json();\n              (response as any).data = json;\n              resolve(response);\n            }\n          }, (httpErrorResponse: any) => { reject(httpErrorResponse); });\n        });\n      };\n      break;\n    default:\n      // Default is AngularJS behavior, a promise that resolves to a response\n      // object with the payload in the data field.\n\n      // TODO: check fn types\n      ajaxFunction = (url: string, instruction: AjaxInstruction) => (fn as (instruction: object) => any)(instruction);\n  }\n}\n\nexport function convertAjaxAdapterTypeStringToType(type?: AjaxAdapterType | AjaxAdapterTypeString): AjaxAdapterType {\n  if (isInteger(type) || !type) {\n    return type || 0;\n  } else {\n    const i = ['angularjs', 'fetch', 'angular', 'jquery'].indexOf(type);\n    return i > -1 ? i : 0;\n  }\n}\n","import { Collection } from '../Collection';\nimport { Element } from '../Element';\nimport { ElpongError, ElpongErrorType } from '../Errors';\n\nexport interface UrlHelperOptions extends UrlOptions {\n  suffix?: string;\n  params?: any;\n}\n\nexport interface UrlHelperElementOptions extends UrlHelperOptions {\n  noSelector?: boolean;\n}\n\nexport interface UrlHelperCollectionOptions extends UrlHelperOptions {\n}\n\nexport interface UrlOptions {\n  params?: any;\n}\n\nexport function createForElement(element: Element, urlOptions: UrlHelperElementOptions): string {\n  let url;\n  const collection = element.collection();\n  const scheme = collection.scheme();\n  const apiUrl = scheme.getApiUrl();\n  if (!apiUrl) { throw new ElpongError(ElpongErrorType.APINUR); }\n\n  url = `${apiUrl}/${collection.name}`;\n  if (!urlOptions.noSelector) {\n    url = `${url}/${element.selector()}`;\n  }\n\n  if (urlOptions.suffix) { url = `${url}/${urlOptions.suffix}`; }\n  if (urlOptions.params) { url = appendParamsToUrl(url, urlOptions.params); }\n  return url;\n}\n\nexport function createForCollection(collection: Collection, urlOptions: UrlHelperOptions): string {\n  const apiUrl = collection.scheme().getApiUrl();\n  if (!apiUrl) { throw new ElpongError(ElpongErrorType.APINUR); }\n\n  let url = `${apiUrl}/${collection.name}`; // HPP.Helpers.Url.createForCollection(, hpe, userOptions) # (action_name, element, user_options = {}, suffix)\n  if (urlOptions.suffix) { url = `${url}/${urlOptions.suffix}`; }\n  if (urlOptions.params) { url = appendParamsToUrl(url, urlOptions.params); }\n  return url;\n}\n\nexport function trimSlashes(s: string): string {\n  return s.replace(/^\\/|\\/$/g, '');\n}\n\nexport function isFqdn(s: string): boolean {\n  return /^https?:\\/\\//.test(s);\n}\n\nexport function appendParamsToUrl(url: string, params: any): string {\n  url = `${url}?`;\n  for (const k in params) {\n    url = `${url}${k}=${encodeURIComponent(params[k])}&`;\n  }\n  url = url.slice(0, -1);\n  return url;\n}\n","import { ElpongError, ElpongErrorType } from '../Errors';\nimport { Scheme } from '../Scheme';\nimport { getSingularName } from './CollectionHelper';\n\nexport function getCollectionBySingularName(scheme: Scheme, singularName: string) {\n  for (const collectionName in scheme.getCollections()) {\n    const collection = scheme.select(collectionName);\n    if (getSingularName(collection) === singularName) { return collection; }\n  }\n  throw new ElpongError(ElpongErrorType.COLNFS, singularName);\n}\n","import { AjaxAdapterType, AjaxAdapterTypeString, AjaxExternalFunction, setAjaxFunction } from './Ajax';\nimport { Collection } from './Collection';\nimport { PreSchemeConfiguration } from './Configuration';\nimport { ElpongError, ElpongErrorType } from './Errors';\nimport { Scheme } from './Scheme';\nimport { arrayFromHTML } from './Util';\n\ninterface SchemeMap {\n  [name: string]: Scheme;\n}\n\ninterface CollectionMap {\n  [name: string]: Collection;\n}\n\nlet schemes: SchemeMap = {};\nlet autoload: boolean = false;\n\nexport const elpong = {\n  add: (schemeConfig: PreSchemeConfiguration): Scheme => {\n    const scheme = new Scheme(schemeConfig);\n    return schemes[scheme.name] = scheme;\n  },\n  enableAutoload: (): void => {\n    autoload = true;\n    elpong.load(true);\n  },\n  get: (name: string): Scheme => {\n    const scheme = schemes[name];\n    if (scheme) return scheme;\n    throw new ElpongError(ElpongErrorType.SCHNFO, name); // Scheme not found\n  },\n  isAutoloadEnabled: (): boolean => {\n    return autoload;\n  },\n  load: (ignoreEmpty: boolean): void => {\n    if (typeof document === 'undefined') return;\n\n    const schemeTags: NodeListOf<HTMLMetaElement> = document.querySelectorAll('meta[name=elpong-scheme]') as NodeListOf<HTMLMetaElement>;\n\n    if (!ignoreEmpty && !schemeTags.length) {\n      throw new ElpongError(ElpongErrorType.ELPNST);\n    }\n\n    for (const schemeTag of arrayFromHTML(schemeTags) as HTMLMetaElement[]) {\n      const scheme = elpong.add(JSON.parse(schemeTag.content));\n    }\n  },\n  setAjax: (fn: AjaxExternalFunction, type?: AjaxAdapterType | AjaxAdapterTypeString): void => {\n    setAjaxFunction(fn, type);\n  },\n  tearDown: (): void => {\n    autoload = false;\n    schemes = {};\n  }\n};\n","import { Collection } from './Collection';\nimport { PreSchemeConfiguration, SchemeConfiguration } from './Configuration';\nimport { elpong } from './elpong';\nimport { ElpongError, ElpongErrorType } from './Errors';\nimport { isFqdn, trimSlashes } from './Helpers/UrlHelper';\n\nexport interface CollectionMap {\n  [name: string]: Collection;\n}\n\nexport class Scheme {\n  name: string;\n  private _configuration: SchemeConfiguration;\n  private _collections: CollectionMap;\n  private apiUrl: string;\n\n  constructor(preSchemeConfiguration: PreSchemeConfiguration) {\n    const sc = new SchemeConfiguration(preSchemeConfiguration);\n    this._configuration = sc;\n    this.name = sc.name;\n    this._collections = {};\n\n    // Create collections\n    for (const collectionName in sc.collections) {\n      const collectionSettings = sc.collections[collectionName];\n      const collection = new Collection(this, collectionName);\n      this._collections[collectionName] = collection;\n    }\n\n    if (elpong.isAutoloadEnabled()) {\n      for (const collectionName in sc.collections) {\n        this._collections[collectionName].load(true);\n      }\n    }\n  }\n\n  configuration(): SchemeConfiguration {\n    return this._configuration;\n  }\n\n  select(name: string): Collection {\n    const collection = this._collections[name];\n    if (collection) {\n      return collection;\n    } else {\n      throw new ElpongError(ElpongErrorType.COLNFO, name);\n    }\n  }\n\n  setApiUrl(url: string): string {\n    const trimmedUrl = trimSlashes(url);\n    return this.apiUrl = isFqdn(trimmedUrl) ? trimmedUrl : `/${trimmedUrl}`;\n  }\n\n  getApiUrl(): string {\n    return this.apiUrl;\n  }\n\n  getCollections(): CollectionMap {\n    return this._collections;\n  }\n}\n","import { AjaxPromise } from './Ajax';\nimport { ActionConfiguration, CollectionConfiguration } from './Configuration';\nimport { Element, SelectorValue } from './Element';\nimport { ElpongError, ElpongErrorType } from './Errors';\nimport { FakeMap } from './FakeThings';\nimport { CollectionActionOptions, executeCustom, executeGetAll, executeGetOne } from './Helpers/Collection/CollectionActions';\nimport { addElement, getConfiguration } from './Helpers/CollectionHelper';\nimport { PreElement } from './PreElement';\nimport { Scheme } from './Scheme';\nimport { arrayFromHTML, camelize, forEach } from './Util';\n\nexport type ElementMap = FakeMap;\n\nexport type GetAllCollectionActionFunction = (actionOptions?: CollectionActionOptions) => AjaxPromise;\nexport type GetOneCollectionActionFunction = (selectorValue?: SelectorValue, actionOptions?: CollectionActionOptions) => AjaxPromise;\n// SelectorValue needs to be an argument type because of https://github.com/Microsoft/TypeScript/issues/10042\nexport type CustomCollectionActionFunction = (actionOptions?: CollectionActionOptions | SelectorValue) => AjaxPromise;\n\nexport interface CollectionActions {\n  [actionName: string]: CustomCollectionActionFunction;\n  getAll: GetAllCollectionActionFunction;\n  getOne: GetOneCollectionActionFunction;\n}\n\nexport interface CollectionArrayOptions {\n  no_new?: boolean;\n}\n\nexport interface CollectionFindByOptions extends CollectionArrayOptions {\n  multiple?: boolean;\n}\n\nexport interface FieldsKeyValueMap {\n  [key: string]: any;\n}\n\nexport class Collection {\n  readonly name: string;\n  readonly elements: FakeMap;\n  readonly newElements: Element[];\n  readonly actions: CollectionActions;\n  private readonly _scheme: Scheme;\n  private readonly _defaultPreElement: PreElement;\n\n  constructor(scheme: Scheme, name: string) {\n    this._scheme = scheme;\n    this.name = name;\n    this.elements = new FakeMap();\n    this.newElements = [];\n    this._defaultPreElement = {};\n\n    const config = getConfiguration(this);\n\n    for (const fieldKey in config.fields) {\n      const fieldConfig = config.fields[fieldKey];\n\n      if (fieldConfig.default) {\n        this._defaultPreElement[fieldKey] = fieldConfig.default;\n      }\n    }\n\n    this.actions = {\n      getAll: (actionOptions?: CollectionActionOptions) => {\n        return executeGetAll(this, actionOptions);\n      },\n      getOne: (selectorValue?: SelectorValue, actionOptions?: CollectionActionOptions) => {\n        if (selectorValue === undefined) { throw new ElpongError(ElpongErrorType.ELENOS); }\n        return executeGetOne(this, selectorValue, actionOptions);\n      }\n    };\n    forEach(config.collection_actions, (actionConfig: ActionConfiguration, actionName: string) => {\n      this.actions[camelize(actionName)] = (actionOptions: CollectionActionOptions = {}) =>\n        executeCustom(this, actionName, actionConfig, actionOptions);\n    });\n  }\n\n  scheme(): Scheme {\n    return this._scheme;\n  }\n\n  load(ignoreEmpty: boolean): void {\n    if (typeof document === 'undefined') { throw new ElpongError(ElpongErrorType.ELPNDC); }\n\n    const collectionTags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll(`meta[name=elpong-collection][collection='${this.name}'][scheme='${this.scheme().name}']`) as NodeListOf<HTMLMetaElement>;\n    const elementTags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll(`meta[name=elpong-element][collection='${this.name}'][scheme='${this.scheme().name}']`) as NodeListOf<HTMLMetaElement>;\n\n    if (!ignoreEmpty && !collectionTags.length && !elementTags.length) {\n      throw new ElpongError(ElpongErrorType.ELPNCE);\n    }\n\n    for (const collectionTag of arrayFromHTML(collectionTags) as HTMLMetaElement[]) {\n      for (const preElement of JSON.parse(collectionTag.content) as PreElement[]) {\n        this.buildOrMerge(preElement);\n      }\n    }\n    arrayFromHTML(elementTags).map((elementTag: HTMLMetaElement) =>\n      this.buildOrMerge(JSON.parse(elementTag.content)));\n  }\n\n  configuration(): CollectionConfiguration {\n    return getConfiguration(this);\n  }\n\n  // Get an array of all elements\n  //\n  // @return {Element[]} Array of elements\n  array(options?: CollectionArrayOptions): Element[] {\n    if (!options) { options = {no_new: false}; }\n    const arr = options.no_new ? [] : this.newElements;\n    return arr.concat(this.elements.values());\n  }\n\n  find(selectorValue: SelectorValue): Element | null {\n    return this.elements.get(selectorValue) || null;\n  }\n\n  findBy(fieldsKeyValueMap: FieldsKeyValueMap, findOptions: CollectionFindByOptions): Element | Element[] | null {\n    if (!findOptions) { findOptions = {}; }\n\n    let isCorrect;\n    const arr = this.array(findOptions);\n    const responseArr: Element[] = [];\n\n    for (const element of arr) {\n      isCorrect = true;\n      for (const fieldKey in fieldsKeyValueMap) {\n        const fieldValue = fieldsKeyValueMap[fieldKey];\n        if (element.fields[fieldKey] !== fieldValue) {\n          isCorrect = false;\n          break;\n        }\n      }\n      if (isCorrect) {\n        if (findOptions.multiple) {\n          responseArr.push(element);\n        } else {\n          return element;\n        }\n      }\n    }\n    if (findOptions.multiple) {\n      return responseArr;\n    } else {\n      return null;\n    }\n  }\n\n  build(preElement: PreElement): Element {\n    if (!preElement) { preElement = this._defaultPreElement; }\n    const el = new Element(this, preElement);\n    addElement(this, el);\n    return el;\n  }\n\n  buildOrMerge(preElement: PreElement): Element {\n    const sv = preElement[this.scheme().configuration().selector];\n    if (sv) {\n      const el = this.find(sv);\n      if (el) {\n        return el.merge(preElement);\n      } else {\n        return this.build(preElement);\n      }\n    } else {\n      return this.build(preElement);\n    }\n  }\n}\n","import { Element } from '../Element';\nimport { copyJSON } from '../Util';\n\nexport function toData(element: Element, fullDuplicate?: boolean) {\n  const collection = element.collection();\n  const scheme = collection.scheme();\n  const o = {};\n  const object = scheme.configuration().collections[collection.name].fields;\n  for (const fieldKey in object) {\n    const fieldSettings = object[fieldKey];\n    if (fieldSettings.no_send || fieldSettings.embedded_collection || fieldSettings.embedded_element) {\n      continue;\n    }\n    const fieldValue = element.fields[fieldKey];\n    if (fullDuplicate && (typeof fieldValue === 'object')) {\n      o[fieldKey] = copyJSON(fieldValue);\n    } else {\n      o[fieldKey] = fieldValue;\n    }\n  }\n  return o;\n}\n","import { Collection } from '../../../Collection';\nimport { EmbeddedCollectionFieldConfiguration } from '../../../Configuration';\nimport { Element } from '../../../Element';\nimport { PreElement } from '../../../PreElement';\nimport { Scheme } from '../../../Scheme';\nimport { forEach } from '../../../Util';\nimport { addElement } from '../../CollectionHelper';\n\nexport function handle(element: Element, preElement: PreElement, fieldKey: string, fieldConfig: EmbeddedCollectionFieldConfiguration): void {\n  const embeddedPreCollection = preElement[fieldKey];\n\n  if (!embeddedPreCollection) return;\n\n  const collection: Collection = element.collection();\n  const scheme: Scheme = collection.scheme();\n  const embeddedElementCollection = scheme.select(fieldConfig.collection || fieldKey);\n\n  forEach(embeddedPreCollection, (embeddedPreElement: PreElement) => {\n    const embeddedElement = new Element(embeddedElementCollection, embeddedPreElement);\n    addElement(embeddedElementCollection, embeddedElement);\n  });\n}\n","import { EmbeddedElementFieldConfiguration } from '../../../Configuration';\nimport { Element } from '../../../Element';\nimport { ElpongError, ElpongErrorType } from '../../../Errors';\nimport { PreElement } from '../../../PreElement';\nimport { getCollectionBySingularName } from '../../SchemeHelper';\n\nexport function handle(element: Element, preElement: PreElement, fieldKey: string, fieldConfig: EmbeddedElementFieldConfiguration): void {\n  let embeddedElementCollection;\n  const embeddedPreElement = preElement[fieldKey];\n  if (!embeddedPreElement) { return; }\n  const collection = element.collection();\n  const scheme = collection.scheme();\n\n  if (fieldConfig.collection) {\n    embeddedElementCollection = scheme.select(fieldConfig.collection);\n  } else {\n    embeddedElementCollection = getCollectionBySingularName(scheme, fieldKey);\n  }\n\n  const embeddedElement = embeddedElementCollection.buildOrMerge(embeddedPreElement);\n\n  const referenceFieldKey = fieldConfig.reference_field || `${fieldKey}_${scheme.configuration().selector}`;\n\n  const referenceFieldConfig = collection.configuration().fields[referenceFieldKey];\n  if (!referenceFieldConfig) return;\n  if (!referenceFieldConfig.reference) return;\n\n  const selectorValue = embeddedElement.selector();\n\n  const referenceFieldValue = preElement[referenceFieldKey];\n  if (referenceFieldValue !== undefined && (referenceFieldValue !== selectorValue)) {\n    throw new ElpongError(ElpongErrorType.ELEAFW, `${referenceFieldValue} != ${selectorValue}`);\n  }\n  element.fields[referenceFieldKey] = selectorValue;\n}\n","import { Collection } from '../../../Collection';\nimport { HasManyRelationConfiguration, HasOneRelationConfiguration } from '../../../Configuration';\nimport { Element } from '../../../Element';\nimport { ElpongError, ElpongErrorType } from '../../../Errors';\nimport { camelize, includes } from '../../../Util';\nimport { getSingularName } from '../../CollectionHelper';\n\nexport type HasManyRelationFunction = () => Element[];\n\nexport function setup(element: Element, relationCollectionName: string, relationSettings: HasManyRelationConfiguration) {\n  const collection = element.collection();\n  const collectionConfig = collection.configuration();\n\n  const relationCollection = collection.scheme().select(relationSettings.collection || relationCollectionName);\n\n  // let relation_field_settings: FieldConfiguration;\n  // if (relation_field_settings = collection_config.fields[references_field_key]) {\n  //   // throw new Error(\"Field #{field_key} of collection #{collection.getName()} are not references\") if !relation_field_settings.references\n  //   return element.relations[Util.camelize(relation_collection_name)] = (): Element[] =>\n  //     getHasManyRelationArrayThroughReferencesField(element, relation_collection, references_field_key);\n  //\n  // }\n\n  if (relationSettings.inline) {\n    const referencesFieldKey = relationSettings.inline_field || `${relationCollectionName}_${collection.scheme().configuration().selector}s`; // dogs_ids, unless specified otherwise\n\n    return element.relations[camelize(relationCollectionName)] = (): Element[] =>\n      getHasManyRelationArrayInline(element, relationCollection, referencesFieldKey);\n  } else { // normal has_many relationship\n    return element.relations[camelize(relationCollectionName)] =\n      getHasManyRelationFunction(element, collection, relationSettings, relationCollection);\n  }\n}\n\nexport function getHasManyRelationFunction(element: Element, collection: Collection, relationConfig: HasManyRelationConfiguration | HasOneRelationConfiguration, relationCollection: Collection, limitToOne?: boolean): HasManyRelationFunction {\n  let hasManyFieldKey: string;\n  const collectionSingularName = getSingularName(collection);\n  const relationCollectionSettings = relationCollection.configuration();\n\n  const selectorKey = collection.scheme().configuration().selector;\n\n  if (relationConfig.polymorphic) {\n    hasManyFieldKey = `${relationConfig.as}_${selectorKey}`;\n    const hasManyCollectionFieldKey = `${relationConfig.as}_collection`;\n\n    return (): Element[] => getPolymorphicHasManyRelationArray(element, relationCollection, hasManyFieldKey, hasManyCollectionFieldKey, limitToOne);\n  } else {\n    if (relationConfig.field) {\n      hasManyFieldKey = relationConfig.field;\n    } else if (relationConfig.as) {\n      hasManyFieldKey = `${relationConfig.as}_${selectorKey}`;\n    } else {\n      hasManyFieldKey = `${collectionSingularName}_${selectorKey}`;\n    }\n    return (): Element[] => getHasManyRelationArray(element, relationCollection, hasManyFieldKey, limitToOne);\n  }\n}\n\nfunction getHasManyRelationArray(element: Element, relationCollection: Collection, hasManyFieldKey: string, limitToOne?: boolean): Element[] {\n  const element2Arr: Element[] = [];\n  const selectorValue = element.selector();\n\n  for (const element2 of relationCollection.array()) {\n    if (selectorValue === element2.fields[hasManyFieldKey]) {\n      element2Arr.push(element2);\n      if (limitToOne) {\n        return element2Arr;\n      }\n    }\n  }\n\n  return element2Arr;\n}\n\nfunction getPolymorphicHasManyRelationArray(element: Element, relationCollection: Collection, hasManyFieldKey: string, hasManyCollectionFieldKey: string, limitToOne?: boolean): Element[] {\n  const element2Arr: Element[] = [];\n  const selectorValue = element.selector();\n  const collectionName = element.collection().name;\n\n  for (const element2 of relationCollection.array()) {\n    if (selectorValue === element2.fields[hasManyFieldKey] && collectionName === element2.fields[hasManyCollectionFieldKey]) {\n      element2Arr.push(element2);\n      if (limitToOne) {\n        return element2Arr;\n      }\n    }\n  }\n\n  return element2Arr;\n}\n\nfunction getHasManyRelationArrayInline(element: Element, relationCollection: Collection, fieldKey: string): Element[] {\n  const selectorValueArr = element.fields[fieldKey];\n  if (!Array.isArray(selectorValueArr)) { throw new ElpongError(ElpongErrorType.FLDNSA, fieldKey); }\n  const element2Arr: Element[] = [];\n  for (const element2 of relationCollection.array()) {\n    if (includes(selectorValueArr, element2.selector())) { element2Arr.push(element2); }\n  }\n  return element2Arr;\n}\n","import { Element } from './Element';\nimport { toData } from './Helpers/ElementHelper';\n\nexport class Snapshot {\n  tag?: string;\n  time: number;\n  data: object;\n  element: Element;\n  undone: boolean;\n  index: number;\n\n  constructor(element: Element, tag?: string) {\n    this.element = element;\n    this.tag = tag;\n    this.data = toData(element, true);\n    this.undone = false;\n    this.time = Date.now();\n    this.index = element.snapshots.list.length;\n    element.snapshots.list.push(this);\n    element.snapshots.currentIndex = this.index;\n  }\n\n  revert() {\n    const list = this.element.snapshots.list;\n    this.element.merge(this.data);\n    this.element.snapshots.currentIndex = this.index;\n    this.undone = false;\n    for (let i = this.index + 1, l = list.length; i < l; i++) {\n      list[i].undone = true;\n    }\n  }\n}\n","import { ElpongError, ElpongErrorType } from './Errors';\n\nexport class SchemeConfiguration implements PreSchemeConfiguration {\n  readonly name: string;\n  readonly selector: string;\n  readonly collections: CollectionConfigurationMap;\n\n  constructor(preconf: PreSchemeConfiguration) {\n    this.name = preconf.name;\n    if (!this.name) {\n      throw new ElpongError(ElpongErrorType.CNFNNA);\n    }\n    this.selector = preconf.selector;\n    if (!this.selector) {\n      throw new ElpongError(ElpongErrorType.CNFNSL, preconf.name);\n    }\n    this.collections = {} as CollectionConfigurationMap;\n\n    for (const collectionName in preconf.collections) {\n      const collectionPreconf = preconf.collections[collectionName];\n\n      const collectionConfiguration: CollectionConfiguration = this.collections[collectionName] = {\n        singular: collectionPreconf.singular || collectionName.slice(0, -1)\n      } as CollectionConfiguration;\n\n      const props = ['fields', 'relations', 'actions', 'collection_actions'];\n      const relationTypes = ['has_many', 'has_one', 'belongs_to'];\n\n      for (const prop of props) {\n        collectionConfiguration[prop] = collectionPreconf[prop] || {};\n      }\n      const relationsConf = collectionPreconf.relations;\n      if (relationsConf) {\n        for (const relationType of relationTypes) {\n          relationsConf[relationType] =\n            (collectionPreconf.relations as RelationConfigurationMaps)[relationType] || {};\n        }\n      }\n    }\n  }\n}\nexport interface PreSchemeConfiguration {\n  name: string;\n  selector: string;\n  collections: CollectionConfigurationMapWithOptionals;\n}\nexport interface SchemeConfiguration {\n  readonly name: string;\n  readonly selector: string;\n  readonly collections: CollectionConfigurationMap;\n}\nexport interface CollectionConfigurationMapWithOptionals {\n  [name: string]: CollectionConfigurationWithOptionals;\n}\nexport interface CollectionConfigurationMap extends CollectionConfigurationMapWithOptionals {\n  [name: string]: CollectionConfiguration;\n}\nexport interface CollectionConfigurationWithOptionals {\n  readonly singular?: string;\n  readonly fields: FieldConfigurationMap;\n  readonly relations?: RelationConfigurationMapsWithOptionals;\n  readonly actions?: ActionConfigurationMap;\n  readonly collection_actions?: CollectionActionConfigurationMap;\n}\nexport interface CollectionConfiguration extends CollectionConfigurationWithOptionals {\n  readonly singular: string;\n  readonly fields: FieldConfigurationMap;\n  readonly relations: RelationConfigurationMaps;\n  readonly actions: ActionConfigurationMap;\n  readonly collection_actions: CollectionActionConfigurationMap;\n}\nexport interface FieldConfigurationMap {\n  readonly [name: string]: FieldConfiguration;\n}\nexport interface FieldConfiguration {\n  readonly reference?: boolean;\n  readonly default?: any;\n  readonly embedded_element?: boolean;\n  readonly embedded_collection?: boolean;\n  readonly no_send?: boolean;\n}\nexport interface EmbeddedElementFieldConfiguration extends FieldConfiguration {\n  readonly reference_field?: string;\n  readonly collection?: string;\n}\nexport interface EmbeddedCollectionFieldConfiguration extends FieldConfiguration {\n  readonly collection?: string;\n}\nexport interface RelationConfigurationMapsWithOptionals {\n  readonly has_many?: HasManyRelationConfigurationMap;\n  readonly has_one?: HasOneRelationConfigurationMap;\n  readonly belongs_to?: BelongsToRelationConfigurationMap;\n}\nexport interface RelationConfigurationMaps {\n  readonly has_many: HasManyRelationConfigurationMap;\n  readonly has_one: HasOneRelationConfigurationMap;\n  readonly belongs_to: BelongsToRelationConfigurationMap;\n}\nexport interface HasManyRelationConfigurationMap {\n  readonly [name: string]: HasManyRelationConfiguration;\n}\nexport interface HasOneRelationConfigurationMap {\n  readonly [name: string]: HasOneRelationConfiguration;\n}\nexport interface BelongsToRelationConfigurationMap {\n  readonly [name: string]: BelongsToRelationConfiguration;\n}\nexport interface RelationConfiguration {\n\n}\nexport interface HasManyRelationConfiguration extends RelationConfiguration {\n  readonly field?: string;\n  readonly collection?: string;\n  readonly references_field?: string;\n  // Polymorphism\n  readonly polymorphic?: boolean;\n  readonly as?: string; // block\n  // Inline\n  readonly inline?: boolean;\n  readonly inline_field?: string;\n}\nexport interface HasOneRelationConfiguration extends RelationConfiguration {\n  readonly field?: string;\n  readonly collection?: string;\n  readonly references_field?: string;\n  // Polymorphism\n  readonly polymorphic?: boolean;\n  readonly as?: string; // block\n}\nexport interface BelongsToRelationConfigurationBase extends RelationConfiguration {\n  readonly collection?: string;\n  // Polymorphism\n  readonly polymorphic?: boolean;\n  readonly field?: string; // block_id\n  readonly collection_field?: string; // block_collection\n}\nexport interface NonPolymorphicBelongsToRelationConfiguration extends BelongsToRelationConfigurationBase {\n  readonly polymorphic?: false;\n}\nexport interface PolymorphicBelongsToRelationConfiguration extends BelongsToRelationConfigurationBase {\n  readonly polymorphic: true;\n  readonly field: string;\n}\nexport type BelongsToRelationConfiguration = NonPolymorphicBelongsToRelationConfiguration | PolymorphicBelongsToRelationConfiguration;\nexport interface ActionConfigurationMap {\n  readonly [name: string]: ActionConfiguration;\n}\nexport interface CollectionActionConfigurationMap {\n  readonly [name: string]: CollectionActionConfiguration;\n}\nexport interface CollectionActionConfiguration {\n  readonly method: string;\n  readonly path?: string;\n}\nexport interface ActionConfiguration {\n  readonly method: string;\n  readonly returns_other?: boolean;\n  readonly no_data?: boolean;\n  readonly no_selector?: boolean;\n  readonly path?: string;\n}\n","export { elpong as default } from './elpong';\nexport {\n  Scheme,\n  CollectionMap\n} from './Scheme';\nexport {\n  Collection,\n  CollectionActions,\n  GetAllCollectionActionFunction,\n  GetOneCollectionActionFunction,\n  CustomCollectionActionFunction,\n  CollectionArrayOptions,\n  CollectionFindByOptions,\n  FieldsKeyValueMap\n} from './Collection';\nexport {\n  Element,\n  SelectorValue,\n  Fields, Relations, Actions, Snapshots,\n  RelationFunction, ActionFunction\n} from './Element';\nexport { PreElement } from './PreElement';\nexport { ElpongError } from './Errors';\nexport { Snapshot } from './Snapshot';\nexport {\n  SchemeConfiguration,\n  PreSchemeConfiguration,\n  CollectionConfiguration,\n  CollectionConfigurationMap,\n  CollectionActionConfiguration,\n  CollectionActionConfigurationMap,\n  CollectionConfigurationWithOptionals,\n  CollectionConfigurationMapWithOptionals,\n  FieldConfiguration,\n  FieldConfigurationMap,\n  RelationConfiguration,\n  RelationConfigurationMaps,\n  HasOneRelationConfiguration,\n  HasManyRelationConfiguration,\n  BelongsToRelationConfiguration,\n  HasOneRelationConfigurationMap,\n  HasManyRelationConfigurationMap,\n  BelongsToRelationConfigurationMap,\n  EmbeddedElementFieldConfiguration,\n  BelongsToRelationConfigurationBase,\n  EmbeddedCollectionFieldConfiguration,\n  RelationConfigurationMapsWithOptionals,\n  ActionConfiguration,\n  ActionConfigurationMap,\n  PolymorphicBelongsToRelationConfiguration,\n  NonPolymorphicBelongsToRelationConfiguration\n} from './Configuration';\nexport {\n  AjaxAdapterType\n} from './Ajax';\n","import { AjaxData, AjaxHeaders, AjaxPromise, AjaxResponse, executeRequest } from '../../Ajax';\nimport { ActionConfiguration, ActionConfigurationMap } from '../../Configuration';\nimport { Element, SelectorValue } from '../../Element';\nimport { ElpongError, ElpongErrorType } from '../../Errors';\nimport { camelize, forEach, includes, removeFromArray } from '../../Util';\nimport { toData } from '../ElementHelper';\nimport { createForElement, UrlHelperElementOptions } from '../UrlHelper';\n\nexport interface ActionOptions {\n  data?: AjaxData;\n  headers?: AjaxHeaders;\n  params?: any;\n}\n\nexport function setup(element: Element, actionsConfig: ActionConfigurationMap) {\n  for (const method of ['get', 'post', 'put', 'delete']) {\n    element.actions[method] = (actionOptions: ActionOptions) => {\n      return execute(element, method.toUpperCase(), actionOptions);\n    };\n  }\n\n  forEach(actionsConfig, (actionConfig: ActionConfiguration, actionName: string) => {\n    element.actions[camelize(actionName)] = (actionOptions: ActionOptions) => {\n      if (element.isNew() && !actionConfig.no_selector) { throw new ElpongError(ElpongErrorType.ELENEW); }\n      return executeCustom(element, actionName, actionConfig, actionOptions);\n    };\n  });\n}\n\nexport function execute(element: Element, method: string, actionOptions: ActionOptions = {}): AjaxPromise {\n  element.snapshots.make(`before_${method.toLowerCase()}`);\n\n  let data;\n  if (actionOptions.data) {\n    if (method !== 'GET') {\n      data = actionOptions.data;\n    } else {\n      throw new ElpongError(ElpongErrorType.AJXGDA);\n    }\n  } else if (method !== 'GET') {\n    data = toData(element);\n  }\n\n  if (method === 'POST') {\n    if (!element.isNew()) { throw new ElpongError(ElpongErrorType.ELENNW); }\n  } else {\n    if (element.isNew()) { throw new ElpongError(ElpongErrorType.ELENEW); }\n  }\n\n  const urlOptions: UrlHelperElementOptions = {\n    noSelector: method === 'POST',\n    params: actionOptions.params || {}\n  };\n\n  const promise = executeRequest(\n    createForElement(element, urlOptions),\n    method,\n    data,\n    actionOptions.headers\n  );\n  promise.then((response: AjaxResponse): void => {\n    if (response.data) {\n      element.merge(response.data);\n    }\n    element.snapshots.make(`after_${method.toLowerCase()}`);\n\n    const collection = element.collection();\n\n    if (includes(collection.newElements, element)) {\n      removeFromArray(collection.newElements, element);\n      collection.elements.set(element.selector() as SelectorValue, element);\n    }\n  });\n\n  return promise;\n}\n\nexport function executeCustom(element: Element, actionName: string, actionConfig: ActionConfiguration, actionOptions: ActionOptions = {}): AjaxPromise {\n  const method = actionConfig.method.toUpperCase();\n  element.snapshots.make(`before_${actionName}`);\n\n  let data;\n  if (actionOptions.data) {\n    if (method !== 'GET') {\n      data = actionOptions.data;\n    } else {\n      throw new ElpongError(ElpongErrorType.AJXGDA);\n    }\n  } else if (!actionConfig.no_data) {\n    data = toData(element);\n  }\n\n  const urlOptions: UrlHelperElementOptions = {\n    params: actionOptions.params || {},\n    suffix: actionConfig.path || actionName\n  };\n  urlOptions.noSelector = actionConfig.no_selector;\n\n  const promise = executeRequest(\n    createForElement(element, urlOptions),\n    method,\n    data,\n    actionOptions.headers\n  );\n  promise.then((response: AjaxResponse) => {\n    if (!actionConfig.returns_other) {\n      if (response.data) {\n        element.merge(response.data);\n      }\n      element.snapshots.make(`after_${method.toLowerCase()}`);\n    }\n\n    const collection = element.collection();\n    const selectorValue = element.selector();\n    if (selectorValue && includes(collection.newElements, element)) {\n      removeFromArray(collection.newElements, element);\n      collection.elements.set(selectorValue, element);\n    }\n  });\n\n  return promise;\n}\n","import { EmbeddedCollectionFieldConfiguration, EmbeddedElementFieldConfiguration, FieldConfiguration, FieldConfigurationMap } from '../../Configuration';\nimport { Element } from '../../Element';\nimport { PreElement } from '../../PreElement';\nimport { forEach } from '../../Util';\nimport { handle as embeddedCollectionHandle } from './Fields/EmbeddedCollection';\nimport { handle as embeddedElementHandle } from './Fields/EmbeddedElement';\n\nexport function setup(element: Element, fieldsConfigMap: FieldConfigurationMap, preElement: PreElement): void {\n  forEach(fieldsConfigMap, (fieldConfig: FieldConfiguration, fieldKey: string) => {\n    if (fieldConfig.embedded_element) {\n      embeddedElementHandle(element, preElement, fieldKey, fieldConfig as EmbeddedElementFieldConfiguration);\n    } else if (fieldConfig.embedded_collection) {\n      embeddedCollectionHandle(element, preElement, fieldKey, fieldConfig as EmbeddedCollectionFieldConfiguration);\n    } else {\n      if (!preElement.hasOwnProperty(fieldKey)) { return; }\n      const fieldValue = preElement[fieldKey];\n      element.fields[fieldKey] = fieldValue;\n    }\n  });\n}\n","import { BelongsToRelationConfiguration, HasManyRelationConfiguration, HasOneRelationConfiguration, RelationConfigurationMaps } from '../../Configuration';\nimport { Element } from '../../Element';\nimport { forEach } from '../../Util';\nimport { setup as belongsToSetup } from './Relations/BelongsTo';\nimport { setup as hasManySetup } from './Relations/HasMany';\nimport { setup as hasOneSetup } from './Relations/HasOne';\n\nexport function setup(element: Element, relationsConfigMaps: RelationConfigurationMaps) {\n  forEach(relationsConfigMaps.has_many, (relationConfig: HasManyRelationConfiguration, relationCollectionName: string) => {\n    hasManySetup(element, relationCollectionName, relationConfig);\n  });\n\n  forEach(relationsConfigMaps.has_one, (relationConfig: HasOneRelationConfiguration, relationCollectionSingularName: string) => {\n    hasOneSetup(element, relationCollectionSingularName, relationConfig);\n  });\n\n  forEach(relationsConfigMaps.belongs_to, (relationConfig: BelongsToRelationConfiguration, relationCollectionSingularName: string) => {\n    belongsToSetup(element, relationCollectionSingularName, relationConfig);\n  });\n}\n","import { Collection } from '../../../Collection';\nimport { BelongsToRelationConfiguration } from '../../../Configuration';\nimport { Element, isSelectorValue, SelectorValue } from '../../../Element';\nimport { camelize } from '../../../Util';\nimport { getCollectionBySingularName } from '../../SchemeHelper';\n\nexport function setup(element: Element, relationCollectionSingularName: string, relationConfig: BelongsToRelationConfiguration) {\n  let fieldKey: string;\n  let relationCollection: Collection;\n  const collection = element.collection();\n\n  // TODO should be reference\n  if (relationConfig.polymorphic) {\n    const collectionFieldKey = relationConfig.collection_field ||  `${relationCollectionSingularName}_collection`;\n    fieldKey = relationConfig.field;\n    element.relations[camelize(relationCollectionSingularName)] = () =>\n      getPolymorphicBelongsToElement(element, fieldKey, collectionFieldKey, relationCollectionSingularName);\n  } else { // normal\n    const scheme = collection.scheme();\n    if (relationConfig.collection) {\n      relationCollection = collection.scheme().select(relationConfig.collection);\n    } else {\n      relationCollection = getCollectionBySingularName(scheme, relationCollectionSingularName);\n    }\n    fieldKey = relationConfig.field || `${relationCollectionSingularName}_${scheme.configuration().selector}`;\n    element.relations[camelize(relationCollectionSingularName)] = () =>\n      getBelongsToElement(element, relationCollection, fieldKey);\n  }\n}\n\nconst getBelongsToElement = (element: Element, relationCollection: Collection, fieldKey: string): Element | null | undefined => {\n  const selectorValue: SelectorValue = element.fields[fieldKey];\n  if (isSelectorValue(selectorValue)) {\n    return relationCollection.find(selectorValue) || null;\n  } else {\n    return undefined;\n  }\n};\n\n// Gets the polymorphic belongs_to element\n//\n// @param {Element} hpe              The element to which the other element belongs\n// @param {string} field_key                The foreign key, e.g. parent_id.\n// @param {string} collection_field_key     The field name of the other collection, required, e.g. parent_collection.\n// @param {string} collection_selector_field The selector name of the other collection, if it was specified, e.g. id. (Will not be looked at if field_key is present)\n// @param {string} collection_singular_name  e.g. parent\n//\n// @return {Element|null}            The related element.\nconst getPolymorphicBelongsToElement = (element: Element, fieldKey: string, collectionFieldKey: string, collectionSingularName: string) => {\n  const relationCollectionName = element.fields[collectionFieldKey];\n  const relationCollection = element.collection().scheme().select(relationCollectionName);\n  if (!fieldKey) {\n    const selectorKey = element.collection().scheme().configuration().selector;\n    fieldKey = `${collectionSingularName}_${selectorKey}`;\n  }\n  const selectorValue = element.fields[fieldKey];\n  return relationCollection.find(selectorValue) || null;\n};\n","import { Collection } from '../../../Collection';\nimport { HasOneRelationConfiguration } from '../../../Configuration';\nimport { Element } from '../../../Element';\nimport { camelize } from '../../../Util';\nimport { getCollectionBySingularName } from '../../SchemeHelper';\nimport { getHasManyRelationFunction } from './HasMany';\n\nexport function setup(element: Element, relationCollectionSingularName: string, relationConfig: HasOneRelationConfiguration) {\n  let relationCollection: Collection;\n  const collection = element.collection();\n  const collectionConfig = element.collection().configuration();\n\n  const scheme = collection.scheme();\n\n  if (relationConfig.collection) {\n    relationCollection = scheme.select(relationConfig.collection);\n  } else {\n    relationCollection = getCollectionBySingularName(scheme, relationCollectionSingularName);\n  }\n\n  return element.relations[camelize(relationCollectionSingularName)] = () =>\n    getHasManyRelationFunction(element, collection, relationConfig, relationCollection, true)()[0];\n}\n","import { Element } from '../../Element';\nimport { ElpongError, ElpongErrorType } from '../../Errors';\nimport { Snapshot } from '../../Snapshot';\nimport { equalsJSON, includes, isInteger, isRegExp } from '../../Util';\n\nexport function setup(element: Element) {\n  const snapshots = element.snapshots;\n\n  snapshots.list = [];\n\n  snapshots.make = (tag?: string): Snapshot => {\n    return new Snapshot(element, tag);\n  };\n\n  snapshots.lastPersisted = (): Snapshot | undefined => {\n    if (element.isNew()) return;\n\n    for (let i = snapshots.list.length - 1; i >= 0 ; i--) {\n      const snapshot = snapshots.list[i];\n      if (includes(['after_post', 'after_put', 'after_get', 'creation'], snapshot.tag)) {\n        return snapshot;\n      }\n    }\n\n    return;\n\n    // Util.reverseForEach(element.snapshots.list, function(k: string, v: Snapshot) {\n    //   if ((v.tag === 'after_post') || (v.tag === 'after_put') || (v.tag === 'after_get') || (v.tag === 'creation')) {\n    //     last_persisted_snapshot = v;\n    //     return Util.BREAK;\n    //   }\n    // });\n\n    // return last_persisted_snapshot;\n  };\n\n  snapshots.lastWithTag = (tag: string | RegExp): Snapshot | undefined => {\n    const list = element.snapshots.list;\n    if (isRegExp(tag)) {\n      for (let i = list.length - 1; i >= 0 ; i--) {\n        const snapshot = list[i];\n        if (snapshot.tag) {\n          if (tag.test(snapshot.tag)) {\n            return snapshot;\n          }\n        }\n      }\n    } else {\n      for (let i = list.length - 1; i >= 0 ; i--) {\n        const snapshot = list[i];\n        if (tag === snapshot.tag) {\n          return snapshot;\n        }\n      }\n    }\n    return;\n  };\n\n  snapshots.last = (): Snapshot => {\n    const list = element.snapshots.list;\n    return list[list.length - 1];\n  };\n\n  snapshots.undo = (id?: number | string | RegExp): Element => {\n    if (id == null) { id = 0; }\n    if (isInteger(id)) {\n      const list = element.snapshots.list;\n      if (id < 0 || id > list.length) {\n        throw new ElpongError(ElpongErrorType.ELESTI, `${id}`);\n      } else {\n        const snapshot = list[element.snapshots.currentIndex - id];\n        snapshot.revert();\n      }\n    } else {\n      const snapshot = snapshots.lastWithTag(id);\n      if (snapshot) {\n        snapshot.revert();\n      } else {\n        throw new ElpongError(ElpongErrorType.ELESNF, `${id}`);\n      }\n    }\n    return element;\n  };\n\n  snapshots.isPersisted = () => {\n    const snapshot = snapshots.lastPersisted();\n    if (!snapshot) { return false; }\n    return equalsJSON(element.fields, snapshot.data);\n  };\n}\n\n// import Element from '../../Element';\n//\n// const setupSnapshots = (element: Element) => {\n//   element.snapshots = {\n//     getLastPersisted() {\n//       if (element.isNew()) { return null; }\n//       let last_persisted_snapshot = null;\n//       Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//         if ((v.tag === 'after_post') || (v.tag === 'after_put') || (v.tag === 'after_get') || (v.tag === 'creation')) {\n//           last_persisted_snapshot = v;\n//           return Util.BREAK;\n//         }\n//       });\n//\n//       return last_persisted_snapshot;\n//     },\n//\n//     getLastWithTag(tag) {\n//       let last_snapshot_with_tag = null;\n//       if (HP.Util.isRegex(tag)) {\n//         HP.Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//           if (tag.test(v.tag)) {\n//             last_snapshot_with_tag = v;\n//             return HP.Util.BREAK;\n//           }\n//         });\n//       } else {\n//         HP.Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//           if (v.tag === tag) {\n//             last_snapshot_with_tag = v;\n//             return HP.Util.BREAK;\n//           }\n//         });\n//       }\n//       return last_snapshot_with_tag;\n//     },\n//\n//     getLast() {\n//       let last_snapshot = null;\n//       HP.Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//         last_snapshot = v;\n//         return HP.Util.BREAK;\n//       });\n//       return last_snapshot;\n//     },\n//\n//     make(tag) {\n//       let date = Date.now();\n//       let list = hpe.snapshots.list =\n//         HPP.Helpers.Snapshot.removeAfter(hpe.last_snapshot_time, hpe.snapshots.list);\n//       if (list[date]) {\n//         return hpe.snapshots.make(tag); // loop until 1ms has passed\n//       }\n//       let s = list[date] = {\n//         tag,\n//         time: date,\n//         data: HPP.Helpers.Element.getFields(hpe),\n//         revert() {\n//           return hpe.undo(date);\n//         }\n//       };\n//       hpe.last_snapshot_time = date;\n//       return s;\n//     },\n//\n//     list: {}\n//   };\n// }\n","import { values } from './Util';\n\ndeclare const Map: any;\n\nexport type FakeMapKey = string | number;\n\nconst supportsMap = typeof Map !== 'undefined' && (new Map()).values;\n\nexport class FakeMap {\n  readonly hasRealMap: boolean;\n  readonly map: any;\n\n  constructor() {\n    // in IE 11, Map#values doesn't exist. Don't bother about that.\n    this.hasRealMap = supportsMap;\n    this.map = supportsMap ? new Map() : {};\n  }\n\n  get(k: FakeMapKey): any {\n    return supportsMap ? this.map.get(k) : this.map[k];\n  }\n\n  set(k: FakeMapKey, v: any): this {\n    if (supportsMap) { this.map.set(k, v); } else { this.map[k] = v; }\n    return this;\n  }\n\n  has(k: FakeMapKey): boolean {\n    return supportsMap ? this.map.has(k) : !!this.map[k];\n  }\n\n  values(): any[] {\n    // if Map is there, Array.from should also be there\n    return supportsMap ? (Array as any as FakeArrayConstructor).from(this.map.values()) : values(this.map);\n  }\n\n  delete(k: FakeMapKey): void {\n    if (supportsMap) { this.map.delete(k); } else { delete this.map[k]; }\n  }\n}\n\nexport interface FakeString {\n  startsWith(searchString: string, position?: number): boolean;\n  endsWith(searchString: string, endPosition?: number): boolean;\n}\n\nexport interface FakeArrayConstructor {\n  from<T>(arrayLike: ArrayLike<T>): T[];\n}\n","import { AjaxData, AjaxHeaders, AjaxPromise, AjaxResponse, executeRequest } from '../../Ajax';\nimport { Collection } from '../../Collection';\nimport { CollectionActionConfiguration } from '../../Configuration';\nimport { SelectorValue } from '../../Element';\nimport { ElpongError, ElpongErrorType } from '../../Errors';\nimport { PreElement } from '../../PreElement';\nimport { createForCollection, UrlHelperOptions } from '../UrlHelper';\n\nexport interface CollectionActionOptions {\n  data?: AjaxData;\n  headers?: AjaxHeaders;\n  params?: any;\n}\n\nexport function executeGetAll(collection: Collection, actionOptions: CollectionActionOptions = {}): AjaxPromise {\n  if (!actionOptions) actionOptions = {};\n  if (actionOptions.data) {\n    throw new ElpongError(ElpongErrorType.AJXGDA);\n  }\n\n  const promise = executeRequest(\n    createForCollection(collection, {params: actionOptions.params || {}}),\n    'GET',\n    undefined,\n    actionOptions.headers\n  );\n  promise.then((response: AjaxResponse) => {\n    response.data.map((preElement: PreElement) => {\n      collection.buildOrMerge(preElement);\n    });\n  });\n  return promise;\n}\n\nexport function executeGetOne(collection: Collection, selectorValue: SelectorValue, actionOptions: CollectionActionOptions = {}) {\n  if (actionOptions.data) {\n    throw new ElpongError(ElpongErrorType.AJXGDA);\n  }\n\n  const urlOptions: UrlHelperOptions = {\n    params: actionOptions.params || {},\n    suffix: selectorValue as string\n  };\n\n  const promise = executeRequest(\n    createForCollection(collection, urlOptions),\n    'GET',\n    undefined,\n    actionOptions.headers\n  );\n  promise.then((response: AjaxResponse) => {\n    if (response.data) {\n      const selectorKey = collection.scheme().configuration().selector;\n      if (response.data[selectorKey] !== selectorValue) {\n        throw new ElpongError(ElpongErrorType.ELESNM, `${response.data[selectorKey]} != ${selectorValue}`);\n      }\n      collection.buildOrMerge(response.data);\n    }\n  });\n  return promise;\n}\n\nexport function executeCustom(collection: Collection, actionName: string, actionConfig: CollectionActionConfiguration, actionOptions?: CollectionActionOptions) {\n  if (!actionOptions) { actionOptions = {}; }\n  const data = actionOptions.data;\n\n  const method = actionConfig.method.toUpperCase();\n\n  return executeRequest(\n    createForCollection(collection, {suffix: actionConfig.path || actionName, params: actionOptions.params}),\n    method,\n    data,\n    actionOptions.headers\n  );\n}\n"],"sourceRoot":""}