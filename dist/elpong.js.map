{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bcdae5985202e0c443ca","webpack:///./src/main.ts","webpack:///./src/Elpong.ts","webpack:///./src/Scheme.ts","webpack:///./src/Collection.ts","webpack:///./src/Helpers.ts","webpack:///./src/Helpers/UrlHelper.ts","webpack:///./src/Errors.ts","webpack:///./src/Helpers/CollectionHelper.ts","webpack:///./src/Helpers/Collection/Actions.ts","webpack:///./src/Ajax.ts","webpack:///./src/Element.ts","webpack:///./src/Util.ts","webpack:///./src/Helpers/Element/Fields.ts","webpack:///./src/Helpers/SchemeHelper.ts","webpack:///./src/Helpers/Element/Relations.ts","webpack:///./src/Helpers/Element/Relations/HasMany.ts","webpack:///./src/Helpers/Element/Relations/HasOne.ts","webpack:///./src/Helpers/Element/Relations/BelongsTo.ts","webpack:///./src/Helpers/Element/Actions.ts","webpack:///./src/Helpers/ElementHelper.ts","webpack:///./src/Configuration.ts"],"names":[],"mappings":"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","file":"elpong.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Elpong\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Elpong\"] = factory();\n\telse\n\t\troot[\"Elpong\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bcdae5985202e0c443ca","import { Elpong } from './Elpong';\n\nexport = Elpong;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Scheme } from './Scheme';\nimport { Collection } from './Collection';\nimport { SchemeConfiguration } from './Configuration';\nimport { ElpongError } from './Errors';\nimport { Util } from './Util';\nimport { Ajax } from './Ajax';\n\ndeclare let DEBUG: boolean;\n\ninterface SchemeMap {\n  [name: string]: Scheme;\n}\n\ninterface CollectionMap {\n  [name: string]: Collection;\n}\n\nlet schemes: SchemeMap = {};\n\nexport namespace Elpong {\n  export function add(scheme_config: SchemeConfiguration | Object): Scheme {\n    let scheme = new Scheme(scheme_config);\n    return schemes[scheme.name] = scheme;\n  }\n\n  export function get(name: string): Scheme {\n    let scheme: Scheme;\n    if (scheme = schemes[name]) {\n      return scheme;\n    }\n    throw new ElpongError('schmnf', name); // Scheme not found\n  }\n\n  export function load(): void {\n    let scheme_tags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll('meta[name=elpong-scheme]') as NodeListOf<HTMLMetaElement>;\n\n    if (!scheme_tags.length && !Object.keys(schemes).length) {\n      throw new ElpongError('elpgns');\n    }\n\n    for (let scheme_tag of Util.arrayFromHTML(scheme_tags) as HTMLMetaElement[]) {\n      Elpong.add(JSON.parse(scheme_tag.content));\n    }\n\n    // TODO: load preloaded elements\n  }\n\n  export function setAjax(fn: Function): void {\n    Ajax.setAjaxFunction(fn);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Elpong.ts","import { Collection } from './Collection';\nimport { SchemeConfiguration } from './Configuration';\nimport { ElpongError } from './Errors';\nimport { UrlHelper } from './Helpers';\n\ninterface CollectionMap {\n  [name: string]: Collection;\n}\n\ninterface SchemeOptions {\n  no_normalize: boolean;\n  no_create_collections: boolean;\n}\n\nfunction isSchemeConfiguration(sc: SchemeConfiguration | Object): sc is SchemeConfiguration {\n   return (sc as SchemeConfiguration) instanceof SchemeConfiguration;\n}\n\nexport class Scheme {\n  name: string;\n  singular_name: string;\n  private _configuration: SchemeConfiguration;\n  _collections: CollectionMap;\n  private api_url: string;\n\n  constructor(sc: SchemeConfiguration | Object) {\n    let _sc: SchemeConfiguration;\n    if (!isSchemeConfiguration(sc)) {\n      _sc = new SchemeConfiguration(sc);\n    } else {\n      _sc = sc;\n    }\n    this._configuration = _sc;\n    this.name = _sc.name;\n    this._collections = {};\n    this.api_url = null;\n\n    // Create collections\n    for (let collection_name in _sc.collections) {\n      let collection_settings = _sc.collections[collection_name];\n      this._collections[collection_name] = new Collection(this, collection_name);\n    }\n  }\n\n  configuration() {\n    return this._configuration;\n  }\n\n  select(name: string) {\n    let collection;\n    if (collection = this._collections[name]) {\n      return collection;\n    } else {\n      throw new ElpongError('collnf', name);\n    }\n  }\n\n  setApiUrl(url: string) {\n    let api_url = this.api_url = UrlHelper.trimSlashes(url);\n    if (!UrlHelper.isFqdn(api_url)) {\n      return this.api_url = `/${api_url}`;\n    }\n  }\n\n  getApiUrl() {\n    return this.api_url;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Scheme.ts","import { Scheme } from './Scheme';\nimport { PreElement } from './PreElement';\nimport { CollectionHelper } from './Helpers';\nimport { Element, SelectorValue } from './Element';\nimport { Util } from './Util'\n\ninterface ElementMap {\n  [key: string]: Element;\n}\n\ninterface CollectionActions {\n  getAll: Function;\n  getOne: Function;\n  [action_name: string]: Function;\n}\n\nexport interface CollectionActionOptions {\n  data?: Object\n  headers?: Object\n}\n\ninterface CollectionArrayOptions {\n  no_new?: boolean;\n}\n\ninterface CollectionFindByOptions extends CollectionArrayOptions {\n  multiple?: boolean;\n}\n\nexport class Collection {\n  readonly _scheme: Scheme;\n  readonly name: string;\n  private readonly default_pre_element: PreElement;\n  readonly elements: ElementMap;\n  readonly new_elements: Element[];\n  readonly actions: CollectionActions;\n\n  constructor(scheme: Scheme, name: string) {\n    this._scheme = scheme;\n    this.name = name;\n    this.elements = {};\n    this.new_elements = [];\n    this.default_pre_element = {};\n\n    let config = CollectionHelper.getConfiguration(this);\n\n    for (let field_key in config.fields) {\n      let field_config = config.fields[field_key];\n\n      if (field_config.default) {\n        this.default_pre_element[field_key] = field_config.default;\n      }\n    }\n\n    // for collection_action_name, collection_action_settings of settings.collection_actions\n    //   @actions[HP.Util.camelize(collection_action_name)] = ->\n    //     # collection_action_options = {method: collection_action_settings.method.toUpperCase(), }\n    //     # new_options = HP.Util.merge(HP.Util.merge({method: 'GET'}, {meth}), options)\n    //     # HPP.http_function(new_options)\n\n    this.actions = {\n      getAll(user_options: CollectionActionOptions) {\n        return CollectionHelper.Actions.executeGetAll(this, user_options);\n      },\n      getOne(selector_value: SelectorValue, user_options: CollectionActionOptions) {\n        return CollectionHelper.Actions.executeGetOne(this, selector_value, user_options);\n      }\n    };\n\n    Util.forEach(config.collection_actions, (action_settings, action_name) => {\n      this.actions[Util.camelize(action_name)] = (user_options) => {\n        CollectionHelper.Actions.executeCustom(this, action_name, action_settings, user_options);\n      }\n    });\n  }\n\n  scheme() {\n    return this._scheme;\n  }\n\n  load() {\n    let collection_tags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll(`meta[name=elpong-collection][collection='${this.name}'][scheme='${this.scheme().name}']`) as NodeListOf<HTMLMetaElement>;\n    let element_tags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll(`meta[name=elpong-element][collection='${this.name}'][scheme='${this.scheme().name}']`) as NodeListOf<HTMLMetaElement>;\n    for (let collection_tag of Util.arrayFromHTML(collection_tags) as Array<HTMLMetaElement>) {\n      for (let pre_element of JSON.parse(collection_tag.content) as Array<PreElement>) {\n        this.buildOrMerge(pre_element);\n      }\n    }\n    return Util.arrayFromHTML(element_tags).map((element_tag: HTMLMetaElement) =>\n      this.buildOrMerge(JSON.parse(element_tag.content)));\n  }\n\n  configuration() {\n    return CollectionHelper.getConfiguration(this);\n  }\n\n  // Get an array of all elements\n  //\n  // @return {Element[]} Array of elements\n  array(options?: CollectionArrayOptions) {\n    if (!options) { options = {no_new: false}; }\n    let arr = options.no_new ? [] : this.new_elements;\n    return arr.concat(Util.values(this.elements));\n  }\n\n  find(selector_value: SelectorValue) {\n    return this.elements[selector_value];\n  }\n\n  findBy(fields_key_value_map: Object, find_options: CollectionFindByOptions) {\n    if (!find_options) { find_options = {}; }\n\n    let is_correct;\n    let arr = this.array(find_options);\n    let response_arr = [];\n\n    for (let element of arr) {\n      is_correct = true;\n      for (let field_key in fields_key_value_map) {\n        let field_value = fields_key_value_map[field_key];\n        if (element.fields[field_key] !== field_value) {\n          is_correct = false;\n          break;\n        }\n      }\n      if (is_correct) {\n        if (find_options.multiple) {\n          response_arr.push(element);\n        }\n        else {\n          return element;\n        }\n      }\n    }\n\n    return response_arr;\n  }\n\n  build(pre_element: PreElement) {\n    if (pre_element == null) { pre_element = this.default_pre_element; }\n    let el = new Element(this, pre_element);\n    CollectionHelper.addElement(this, el);\n    return el;\n  }\n\n  buildOrMerge(pre_element: PreElement) {\n    let sv;\n    if (sv = pre_element[this.scheme().configuration().selector]) {\n      let el;\n      if (el = this.find(sv)) {\n        return el.merge(pre_element);\n      } else {\n        return this.build(pre_element);\n      }\n    } else {\n      return this.build(pre_element);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Collection.ts","export { UrlHelper } from './Helpers/UrlHelper';\nexport { CollectionHelper } from './Helpers/CollectionHelper';\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers.ts","import { ActionConfiguration } from '../Configuration';\nimport { Element } from '../Element';\nimport { Collection } from '../Collection';\nimport { ElpongError } from '../Errors';\n\nexport interface UrlOptions {\n  path?: string;\n  suffix?: string;\n}\n\nexport namespace UrlHelper {\n  // Creates the api url for an element\n  //\n  // @param {String} action_name           The action name, custom or 'GET', 'POST', 'PUT', 'DELETE'.\n  // @param {HP.Element} element      The element.\n  // @param {Object} user_options          The user_options, keys: suffix, path.\n  //\n  // @return undefined [Description]\n  export function createForElement(action_name: string, action_configuration: ActionConfiguration, element: Element, url_options: UrlOptions) {\n    let path, url;\n    let collection = element.collection();\n    let scheme = collection.scheme();\n    let api_url = scheme.getApiUrl();\n    if (!api_url) { throw new ElpongError('apinur'); }\n\n    if (url_options.path) {\n      path = UrlHelper.trimSlashes(url_options.path);\n      url = `${api_url}/${path}`;\n    } else {\n      url = `${api_url}/${collection.name}`;\n      if (!action_configuration.no_selector && (action_name !== 'POST')) { url = `${url}/${element.selector()}`; }\n    }\n\n    if (action_configuration.method) { // is custom action\n      url = `${url}/${action_configuration.path || action_name}`;\n    }\n\n    if (url_options.suffix) { url = `${url}/${url_options.suffix}`; }\n    return url;\n  }\n\n  export function createForCollection(action_name: string, collection: Collection, url_options: UrlOptions) {\n    let url = `${collection.scheme().getApiUrl()}/${collection.name}`; //HPP.Helpers.Url.createForCollection(, hpe, user_options) # (action_name, element, user_options = {}, suffix)\n    if (url_options.suffix) { url = `${url}/${url_options.suffix}`; }\n    return url;\n  }\n\n  export function trimSlashes(s: string) {\n    return s.replace(/\\/$/, '').replace(/^\\//, '');\n  }\n\n  export function isFqdn(s: string) {\n    return (/^https?:\\/\\//).test(s);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/UrlHelper.ts","if (typeof DEBUG !== 'undefined' && !DEBUG) {\n  var DEBUG = true;\n}\n\nif (DEBUG) {\n  var error_text_map: Object = {\n    'schmnf': 'Scheme not found',\n    'collnf': 'Collection not found',\n    'collnf:s': 'Collection not found by singular name',\n    'collex': 'Collection with name already exists in scheme',\n    'elpgns': 'No schemes added or found',\n    'confns': 'Configuration has no selector',\n    'confnn': 'Configuration has no name',\n    'elenew': 'Element is new',\n    'elesna': 'Element has a selector value but is in new_elements array',\n    'elense': 'Element has no selector value but is in elements object',\n    'apinur': 'Api url has not yet been set'\n  }\n}\n\nexport class ElpongError extends Error {\n  constructor(message: string, argument?: string) {\n    let actual_message = DEBUG ? error_text_map[message] : message;\n    if (argument) {\n      super(`${actual_message}: ${argument}`);\n    }\n    else {\n      super(actual_message);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Errors.ts","import { Element } from '../Element';\nimport { Collection } from '../Collection';\nimport { CollectionConfiguration } from '../Configuration';\nimport { Actions as _Actions } from './Collection/Actions';\n\nexport namespace CollectionHelper {\n  export function getConfiguration(collection: Collection): CollectionConfiguration {\n    return collection.scheme().configuration().collections[collection.name];\n  }\n  export function getSingularName(collection: Collection): string {\n    return getConfiguration(collection).singular; // Last char cut in Configuration\n  }\n  export function addElement(collection: Collection, element: Element): void {\n    let selector_value;\n    if (selector_value = element.selector()) {\n      collection.elements[selector_value] = element;\n    } else {\n      collection.new_elements.push(element);\n    }\n  }\n  export const Actions = _Actions\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/CollectionHelper.ts","import { Collection, CollectionActionOptions } from '../../Collection';\nimport { Ajax, AjaxPromise, AjaxResponse } from '../../Ajax';\nimport { UrlHelper, UrlOptions } from '../UrlHelper';\nimport { SelectorValue } from '../../Element';\nimport { CollectionActionConfiguration } from '../../Configuration';\n\nexport namespace Actions {\n  export function executeGetAll(collection: Collection, action_options: CollectionActionOptions) {\n    if (!action_options) { action_options = {}; }\n    let data = action_options.data;\n\n    let promise: AjaxPromise;\n    promise = Ajax.executeRequest(\n      UrlHelper.createForCollection('GET', collection, action_options as UrlOptions),\n      'GET',\n      data,\n      action_options.headers\n    );\n    promise.then((response: AjaxResponse) => {\n      response.data.map((pre_element) => {\n        collection.buildOrMerge(pre_element);\n      });\n    });\n    return promise;\n  }\n\n  export function executeGetOne(collection: Collection, selector_value: SelectorValue, action_options: CollectionActionOptions) {\n    if (action_options == null) { action_options = {}; }\n    let data = action_options.data;\n\n    let promise = Ajax.executeRequest(\n      UrlHelper.createForCollection('GET', collection, {suffix: selector_value as string}),\n      'GET',\n      data,\n      action_options.headers\n    );\n    promise.then(function(response) {\n      if (response.data) { return collection.buildOrMerge(response.data); }\n    });\n    return promise;\n  }\n\n  export function executeCustom(collection: Collection, action_name: string, action_config: CollectionActionConfiguration, action_options: CollectionActionOptions) {\n    if (action_options == null) { action_options = {}; }\n    let data = action_options.data;\n\n    let method = action_config.method.toUpperCase();\n\n    return Ajax.executeRequest(\n      UrlHelper.createForCollection('GET', collection, {suffix: action_config.path || action_name}),\n      method,\n      data,\n      action_options.headers\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/Collection/Actions.ts","/// <reference path=\"../typings/index.d.ts\"/>\n\n// export interface AjaxPromise extends Promise<any> {\n// }\nexport interface AjaxPromise {\n  then: Function\n} //Promise<any> //|JQueryPromise<{}>;\n\nexport interface AjaxResponse extends Response {\n  data: any;\n}\n\nexport type AjaxFunction = (url: string, instruction: AjaxInstruction) => AjaxPromise;\n\nexport interface AjaxObject {\n  data: Object;\n}\n\nexport interface AjaxInstruction {\n  data: Object;\n  method: string;\n  headers: Object;\n  [prop: string]: any;\n}\n\nexport namespace Ajax {\n  let ajax_function: AjaxFunction;\n\n  export function executeRequest(url: string, method: string, data: Object, headers: Object) {\n    if (headers == null) { headers = {}; }\n    headers['Accept'] = headers['Content-Type'] = 'application/json';\n    let options = {\n      method: method,\n      url: method,\n      data: JSON.stringify(data === undefined ? {} : data),\n      headers: headers,\n      dataType: 'json',\n      responseType: 'json'\n    };\n    options['type'] = options.method;\n    options['body'] = options.data;\n    return ajax_function(options.url, options);\n  }\n\n  // Set the http function used for requests\n  // The function should accept one object with keys\n  // method, url, params, headers\n  // and return a promise-like object\n  // with then and catch\n  //\n  // @note Like $http or jQuery.ajax\n  // @param {Function} fn The function.\n  // @param {string} type The function.\n  export function setAjaxFunction(fn: Function, type?: string) {\n    if (typeof type === 'undefined') {\n      if ((typeof jQuery !== 'undefined') && (fn === jQuery.ajax))\n        var type = 'jquery';\n      else if ((typeof fetch !== 'undefined') && (fn === fetch))\n        var type = 'fetch';\n    }\n\n    switch (type) {\n      case 'jquery':\n        ajax_function = function(url: string, instruction: AjaxInstruction) {\n          let deferred = jQuery.Deferred();\n          let ajax = fn(url, instruction);\n          ajax.then((data: any, status: any, jqxhr: any) => deferred.resolve({data, status: jqxhr.statusCode().status, headers: jqxhr.getAllResponseHeaders()}));\n          ajax.catch((data: any, status: any, jqxhr: any) => deferred.reject({data, status: jqxhr.statusCode().status, headers: jqxhr.getAllResponseHeaders()}));\n          return deferred.promise();\n        }\n        break;\n      case 'fetch':\n        ajax_function = (url: string, instruction: AjaxInstruction) => {\n          return new Promise(function(resolve, reject) {\n            instruction['body'] = instruction.data;\n            let http_promise = fn(url, instruction) as Promise<Response>;\n            http_promise.then(function(response: Response) {\n              if (response.headers.get('content-type') !== 'application/json') {\n                resolve(response);\n              } else {\n                let json_promise = response.json();\n                json_promise.then(function(json: string) {\n                  response['data'] = json; // typescript ignores square brackets\n                  resolve(response);\n                });\n                json_promise.catch(reject);\n              }\n            });\n            http_promise.catch(reject);\n          });\n        }\n        break;\n      default:\n        this.ajax_function = (url: string, instruction: AjaxInstruction) => fn(instruction);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Ajax.ts","import { Collection } from './Collection';\nimport { PreElement } from './PreElement';\nimport { Util } from './Util';\n\nimport { Fields } from './Helpers/Element/Fields';\nimport { Relations } from './Helpers/Element/Relations';\nimport { Actions } from './Helpers/Element/Actions';\n\nimport { ElpongError } from './Errors';\n\nexport type SelectorValue = string|number;\n\ninterface Fields {\n  [field_name: string]: any;\n}\n\ninterface Relations {\n  [relation_function_name: string]: Function;\n}\n\ninterface Actions {\n  get: Function;\n  post: Function;\n  put: Function;\n  delete: Function;\n  [action_name: string]: Function;\n}\n\nexport class Element {\n  readonly _collection: Collection;\n  readonly fields: Fields = {} as Fields;\n  readonly relations: Relations = {} as Relations;\n  readonly actions: Actions = {} as Actions;\n  private last_snapshot_time: number;\n\n  constructor(collection: Collection, pre_element: PreElement) {\n    this._collection = collection;\n\n    let collection_config = collection.configuration();\n\n    Fields.setup(this, collection_config.fields, pre_element);\n    Relations.setup(this, collection_config.relations);\n    Actions.setup(this, collection_config.actions);\n    // Helpers.ElementHelper.setupSnapshots(epe);\n\n    this.last_snapshot_time = null;\n    // this.snapshots.make('creation');\n\n    // TODO: snapshots\n  }\n\n  collection() {\n    return this._collection;\n  }\n\n  selector(): SelectorValue|undefined {\n    return this.fields[this.collection().scheme().configuration().selector];\n  }\n\n  remove() {\n    let element = this;\n    if (this.isNew()) {\n      Util.removeFromArray(this.collection().new_elements, this);\n      return {then(fn) { return fn(); }, catch() {}};\n    } else {\n      return this.actions.delete().then(() => {\n        let elements = this.collection().elements;\n        return delete elements[this.selector()];\n      });\n    }\n  }\n\n  save() {\n    if (this.isNew()) {\n      return this.actions.post();\n    } else {\n      return this.actions.put();\n    }\n  }\n\n  isNew() {\n    if (Util.includes(this.collection().new_elements, this)) {\n      if (this.selector()) {\n        throw new ElpongError('elesna');\n      } else {\n        return true;\n      }\n    } else {\n      if (!this.selector()) {\n        throw new ElpongError('elense');\n      } else {\n        return false;\n      }\n    }\n  }\n\n  // undo(n) {\n  //   if (n == null) { n = 0; }\n  //   if (Util.isInteger(n)) {\n  //     if (n > 1000000) {\n  //       if (this.snapshots.list[n]) {\n  //         this.merge(this.snapshots.list[n].data);\n  //         return this.last_snapshot_time = n;\n  //       } else {\n  //         throw new Error(`Diff at time ${n} does not exist`);\n  //       }\n  //     } else if (n < 0) {\n  //       throw new Error(`${n} is smaller than 0`);\n  //     } else {\n  //       let ds = SnapshotHelper.getSortedArray(this.snapshots.list);\n  //       let { length } = ds;\n  //       let index = ds.indexOf(this.snapshots.list[this.last_snapshot_time]);\n  //       // index = 0 if index < 0\n  //       let d = ds[index - n];\n  //       this.merge(d.data);\n  //       return this.last_snapshot_time = d.time;\n  //     }\n  //   } else if (HP.Util.isString(n)) {\n  //     let a = null;\n  //     for (let v of Array.from(HPP.Helpers.Snapshot.getSortedArray(this.snapshots.list))) {\n  //       if (v.tag === n) {\n  //         if (!a) { a = v; }\n  //       }\n  //     }\n  //     if (a) {\n  //       return this.merge(a.data);\n  //     } else {\n  //       throw new Error(`No snapshot found with tag ${n}`);\n  //     }\n  //   } else {\n  //     throw new TypeError(`Don't know what to do with ${n}`);\n  //   }\n  // }\n\n  merge(pre_element) {\n    let collection_settings = this.collection().configuration();\n    Util.forEach(collection_settings.fields, (field_settings, field_name) => {\n      let field_value;\n      if (field_value = pre_element[field_name]) {\n        if (field_settings.embedded_element) {\n          Fields.handleEmbeddedElement(this, pre_element, field_name, field_settings);\n        } else if (field_settings.embedded_collection) {\n          Fields.handleEmbeddedCollection(this, pre_element, field_name, field_settings);\n        } else {\n          let sv_1 = this.fields[field_name];\n          if (field_settings.selector && (sv_1 !== field_value) && sv_1 && field_value) {\n            throw new Error(`Selector has changed from ${sv_1} to ${field_value}`);\n          }\n          this.fields[field_name] = field_value;\n        }\n      }\n    });\n    return this;\n  }\n\n  // isPersisted() {\n  //   if (this.isNew()) { return false; }\n  //   let { data } = this.snapshots.getLastPersisted();\n  //   let object = HPP.Helpers.Element.getFields(this);\n  //   for (let k in object) {\n  //     let v = object[k];\n  //     if (data[k] !== v) { return false; }\n  //   }\n  //   return true;\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Element.ts","import { FutureString, FutureArrayConstructor } from './Interfaces'\n\nexport const Util = {\n  BREAK: new Object(),\n  kebab: (string: string): string => {\n    return string.toLowerCase().replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').replace(/(é|ë)/g, 'e').split(' ').join('-');\n  },\n  capitalize: (string: string): string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  },\n  camelize: (string: string): string => {\n    return string.replace(/_/g, ' ').replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(letter: string, index: number) {\n      if (index === 0) { return letter.toLowerCase(); } else { return letter.toUpperCase(); }\n    }).replace(/\\s+/g, '');\n  },\n  arrayDiff: (array1: any[], array2: any[]): any[] => {\n    return array1.filter(i => array2.indexOf(i) < 0);\n  },\n  removeFromArray: (array: any[], element: any): boolean => {\n    let i = array.indexOf(element);\n    if (i === -1) {\n      return false;\n    } else {\n      array.splice(i, i + 1);\n      return true;\n    }\n  },\n  copy: (obj: Object) => {\n    if (typeof obj !== 'object') {\n      return obj;\n    }\n    let copy = obj.constructor();\n    for (let attr in obj) {\n      if (obj.hasOwnProperty(attr)) {\n        copy[attr] = obj[attr];\n      }\n    }\n    return copy;\n  },\n  merge: (obj1: Object, obj2: Object): Object => {\n    for (let attr in obj2) {\n      obj1[attr] = obj2[attr];\n    }\n    return obj1;\n  },\n  isInteger: (value: any): boolean => {\n    return value === parseInt(value, 10);\n  },\n  isNumber: (value: any): boolean => {\n    return isFinite(value) && !isNaN(parseFloat(value));\n  },\n  isString: (value: any): boolean => {\n    return typeof value === 'string';\n  },\n  isRegex: (value: any): boolean => {\n    return value instanceof RegExp;\n  },\n  forEach: (o: Object, f: Function): void => {\n    for (let k in o) {\n      let v = o[k];\n      if (!o.hasOwnProperty(k)) { continue; }\n      if (f(v, k) === Util.BREAK) {\n        break;\n      }\n    }\n  },\n\n  reverseForIn: (obj: Object, f: Function): void => {\n    let arr = [];\n    let _break = false;\n    for (let key in obj) {\n      // add hasOwnPropertyCheck if needed\n      arr.push(key);\n    }\n    let i = arr.length - 1;\n    while ((i >= 0) && !_break) {\n      let v = f.call(obj, arr[i], obj[arr[i]]);\n      if (v === Util.BREAK) { _break = true; }\n      i--;\n    }\n  },\n  endsWith: (string: string, search: string): boolean => {\n    if ((string as any as FutureString).endsWith) {\n      return (string as any as FutureString).endsWith(search);\n    } else {\n      return string.substr(-search.length) === search;\n    }\n  },\n  startsWith: (string: string, search: string): boolean => {\n    if ((string as any as FutureString).startsWith) {\n      return (string as any as FutureString).startsWith(search);\n    } else {\n      return string.substr(0, search.length) === search;\n    }\n  },\n  arrayFromHTML: (node_list: NodeListOf<HTMLElement>): Array<HTMLElement> => {\n    if ((Array as any as FutureArrayConstructor).from) {\n      return (Array as any as FutureArrayConstructor).from(node_list);\n    }\n    else {\n      return [].slice.call(node_list);\n    }\n  },\n  values: (obj: Object): any[] => {\n    let vals = [];\n\t\tfor (let key in obj) {\n\t\t\tif (obj.hasOwnProperty(key) && obj.propertyIsEnumerable(key)) {\n\t\t\t\tvals.push(obj[key]);\n\t\t\t}\n\t\t}\n\t\treturn vals;\n  },\n  includes: (a: any[], b: any): boolean => {\n\t  return a.indexOf(b) > -1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Util.ts","import { Element } from '../../Element';\nimport { Util } from '../../Util';\nimport { SchemeHelper } from '../SchemeHelper';\nimport { FieldConfigurationMap, FieldConfiguration, EmbeddedElementFieldConfiguration, EmbeddedCollectionFieldConfiguration } from '../../Configuration';\nimport { PreElement } from '../../PreElement';\nimport { CollectionHelper } from '../CollectionHelper';\nimport { Collection } from '../../Collection';\nimport { Scheme } from '../../Scheme';\n\nexport namespace Fields {\n  export function setup(element: Element, fields_config_map: FieldConfigurationMap, pre_element: PreElement) {\n    Util.forEach(fields_config_map, (field_config: FieldConfiguration, field_name: string) => {\n      if (field_config.embedded_element) {\n        return handleEmbeddedElement(element, pre_element, field_name, field_config as EmbeddedElementFieldConfiguration);\n      } else if (field_config.embedded_collection) {\n        return handleEmbeddedCollection(element, pre_element, field_name, field_config as EmbeddedCollectionFieldConfiguration);\n      } else {\n        let field_value = pre_element[field_name];\n        return element.fields[field_name] = field_value;\n      }\n    });\n  }\n\n  export function handleEmbeddedElement(hpe: Element, pre_element: PreElement, field_name: string, field_config: EmbeddedElementFieldConfiguration) {\n    let embedded_element_collection;\n    let embedded_pre_element = pre_element[field_name];\n    if (!embedded_pre_element) { return; }\n    let collection = hpe.collection();\n    let scheme = collection.scheme();\n    if (field_config.collection) {\n      embedded_element_collection = scheme.select(field_config.collection);\n    } else {\n      embedded_element_collection = SchemeHelper.getCollectionBySingularName(scheme, field_name);\n    }\n\n    let embedded_element = embedded_element_collection.buildOrMerge(embedded_pre_element);\n\n    let associated_field_name = `${field_name}_${scheme.configuration().selector}`;\n    return hpe.fields[associated_field_name] = embedded_element.selector()\n  }\n\n  export function handleEmbeddedCollection(hpe: Element, pre_element: PreElement, field_name: string, field_configuration: EmbeddedCollectionFieldConfiguration) {\n    let embedded_pre_collection;\n\n    if (!(embedded_pre_collection = pre_element[field_name])) { return; }\n    let collection: Collection = hpe.collection();\n    let scheme: Scheme = collection.scheme();\n    let embedded_element_collection = scheme.select(field_name || field_configuration.collection);\n\n    return Util.forEach(embedded_pre_collection, function(embedded_pre_element: PreElement) {\n      let embedded_element = new Element(embedded_element_collection, embedded_pre_element);\n      return CollectionHelper.addElement(embedded_element_collection, embedded_element);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/Element/Fields.ts","import { Scheme } from '../Scheme';\nimport { ElpongError } from '../Errors';\nimport { CollectionHelper } from './CollectionHelper';\n\nexport namespace SchemeHelper {\n  export function getCollectionBySingularName(scheme: Scheme, singular_name: string) {\n    for (let collection_name in scheme._collections) {\n      let collection = scheme.select(collection_name);\n      if (CollectionHelper.getSingularName(collection) === singular_name) { return collection; }\n    }\n    throw new ElpongError('collnf:s', singular_name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/SchemeHelper.ts","import { Util } from '../../Util';\nimport { HasMany } from './Relations/HasMany';\nimport { HasOne } from './Relations/HasOne';\nimport { Element } from '../../Element';\nimport { RelationConfigurationMaps, HasManyRelationConfiguration, HasOneRelationConfiguration, BelongsToRelationConfiguration } from '../../Configuration';\nimport { BelongsTo } from './Relations/BelongsTo';\n\nexport namespace Relations {\n  export function setup(element: Element, relations_config_maps: RelationConfigurationMaps) {\n    Util.forEach(relations_config_maps.has_many, (relation_config: HasManyRelationConfiguration, relation_collection_name: string) => {\n      HasMany.setup(element, relation_collection_name, relation_config);\n    });\n\n    Util.forEach(relations_config_maps.has_one, (relation_config: HasOneRelationConfiguration, relation_collection_singular_name: string) => {\n      HasOne.setup(element, relation_collection_singular_name, relation_config);\n    });\n\n    Util.forEach(relations_config_maps.belongs_to, (relation_config: BelongsToRelationConfiguration, relation_collection_singular_name: string) => {\n      BelongsTo.setup(element, relation_collection_singular_name, relation_config);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/Element/Relations.ts","import { Element } from '../../../Element';\nimport { Collection } from '../../../Collection';\nimport { CollectionHelper } from '../../CollectionHelper';\nimport { Util } from '../../../Util';\nimport { HasManyRelationConfiguration, HasOneRelationConfiguration } from '../../../Configuration';\n\nexport namespace HasMany {\n  export function setup(element: Element, relation_collection_name: string, relation_settings: HasManyRelationConfiguration) {\n    let collection = element.collection();\n    let collection_config = collection.configuration();\n\n    let relation_collection = collection.scheme().select(relation_settings.collection || relation_collection_name);\n\n    let references_field_name = relation_settings.references_field || `${relation_collection_name}_${collection.scheme().configuration().selector}s`; // dogs_ids, unless specified otherwise\n\n    let relation_field_settings;\n    if (relation_field_settings = collection_config.fields[references_field_name]) {\n      // throw new Error(\"Field #{field_name} of collection #{collection.getName()} are not references\") if !relation_field_settings.references\n      return element.relations[Util.camelize(relation_collection_name)] = () => {\n        return getHasManyRelationArrayThroughReferencesField(element, relation_collection, references_field_name);\n      }\n\n    } else { // normal has_many relationship\n      return element.relations[Util.camelize(relation_collection_name)] =\n        getHasManyRelationFunction(element, collection, relation_settings, relation_collection);\n    }\n  }\n\n  export function getHasManyRelationFunction(element: Element, collection: Collection, relation_config: HasManyRelationConfiguration|HasOneRelationConfiguration, relation_collection: Collection) {\n    let has_many_field_name;\n    let collection_singular_name = CollectionHelper.getSingularName(collection);\n    let relation_collection_settings = relation_collection.configuration();\n\n    let selector_key = collection.scheme().configuration().selector;\n\n    if (relation_config.polymorphic) {\n      has_many_field_name = `${relation_config.as}_${selector_key}`;\n      let has_many_collection_field_name = `${relation_config.as}_collection`;\n\n      return () => getPolymorphicHasManyRelationArray(element, relation_collection, has_many_field_name, has_many_collection_field_name);\n    } else {\n      if (relation_config.field) {\n        has_many_field_name = relation_config.field;\n      } else if (relation_config.as) {\n        has_many_field_name = `${relation_config.as}_${selector_key}`;\n      } else {\n        has_many_field_name = `${collection_singular_name}_${selector_key}`;\n      }\n      return () => getHasManyRelationArray(element, relation_collection, has_many_field_name);\n    }\n  }\n\n  function getHasManyRelationArray(element: Element, relation_collection: Collection, has_many_field_name: string) {\n    let element2_arr = [];\n    let selector_value = element.selector();\n    for (let element2 of relation_collection.array()) {\n      if (selector_value === element.fields[has_many_field_name]) {\n        element2_arr.push(element2);\n      }\n    }\n    return element2_arr;\n  }\n\n  function getPolymorphicHasManyRelationArray(element: Element, relation_collection: Collection, has_many_field_name: string, has_many_collection_field_name: string) {\n    let element2_arr = [];\n    let selector_value = element.selector();\n    let collection_name = element.collection().name;\n    for (let element2 of relation_collection.array()) {\n      if (selector_value === element2.fields[has_many_field_name] && collection_name === element2.fields[has_many_collection_field_name]) {\n        element2_arr.push(element2);\n      }\n    }\n    return element2_arr;\n  }\n\n  function getHasManyRelationArrayThroughReferencesField(element: Element, relation_collection: Collection, field_name: string) {\n    let selector_value_arr = element.fields[field_name];\n    if (!Array.isArray(selector_value_arr)) { throw new Error(`Field ${field_name} is not an array, but it should be an array of references to ${relation_collection.name}`); }\n    let hpe2_arr = [];\n    for (let hpe2 of relation_collection.array()) {\n      if (Util.includes(selector_value_arr, element.selector())) { hpe2_arr.push(hpe2); }\n    }\n    return hpe2_arr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/Element/Relations/HasMany.ts","import { Element } from '../../../Element';\nimport { HasMany } from './HasMany';\nimport { HasOneRelationConfiguration } from '../../../Configuration';\nimport { SchemeHelper } from '../../SchemeHelper';\nimport { Util } from '../../../Util';\n\nexport namespace HasOne {\n  export function setup(element: Element, relation_collection_singular_name: string, relation_config: HasOneRelationConfiguration) {\n    let relation_collection;\n    let collection = element.collection();\n    let collection_config = element.collection().configuration();\n\n    let scheme = collection.scheme();\n\n    if (relation_config.collection) {\n      relation_collection = scheme.select(relation_config.collection);\n    } else {\n      relation_collection = SchemeHelper.getCollectionBySingularName(scheme, relation_collection_singular_name);\n    }\n\n    return element.relations[Util.camelize(relation_collection_singular_name)] = () => {\n      HasMany.getHasManyRelationFunction(element, collection, relation_config, relation_collection)()[0];\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/Element/Relations/HasOne.ts","import { Element } from '../../../Element';\nimport { Collection } from '../../../Collection';\nimport { Util } from '../../../Util';\nimport { BelongsToRelationConfiguration } from '../../../Configuration';\n\nexport namespace BelongsTo {\n  export function setup(element: Element, relation_collection_singular_name: string, relation_config: BelongsToRelationConfiguration) {\n    let field_name, relation_collection;\n    let collection = element.collection();\n\n    // TODO should be reference\n    if (relation_config.polymorphic) {\n      let collection_field_name = relation_config.collection_field ||  `${relation_collection_singular_name}_collection`;\n      field_name = relation_config.field;\n      element.relations[Util.camelize(relation_collection_singular_name)] = () => {\n        return getPolymorphicBelongsToElement(element, field_name, collection_field_name, relation_collection_singular_name);\n      }\n    } else { // normal\n      relation_collection = collection.scheme().select(relation_config.collection || relation_collection_singular_name);\n      field_name = relation_config.field || `${relation_collection_singular_name}_${relation_collection.selector_name}`;\n      element.relations[Util.camelize(relation_collection_singular_name)] = () => {\n        return getBelongsToElement(element, relation_collection, field_name);\n      }\n    }\n  }\n\n  let getBelongsToElement = (element: Element, relation_collection: Collection, field_name: string) => {\n    let selector_value = element.fields[field_name];\n    return relation_collection.find(selector_value) || null;\n  }\n\n  // Gets the polymorphic belongs_to element\n  //\n  // @param {Element} hpe              The element to which the other element belongs\n  // @param {string} field_name                The foreign key, e.g. parent_id.\n  // @param {string} collection_field_name     The field name of the other collection, required, e.g. parent_collection.\n  // @param {string} collection_selector_field The selector name of the other collection, if it was specified, e.g. id. (Will not be looked at if field_name is present)\n  // @param {string} collection_singular_name  e.g. parent\n  //\n  // @return {Element|null}            The related element.\n  let getPolymorphicBelongsToElement = (element: Element, field_name: string, collection_field_name: string, collection_singular_name: string) => {\n    // console.log hpe, collection_field_name, collection_selector_field\n    let relation_collection_name = element.fields[collection_field_name];\n    let relation_collection = element.collection().scheme().select(relation_collection_name);\n    if (!field_name) {\n      let selector_key = element.collection().scheme().configuration().selector;\n      field_name = `${collection_singular_name}_${selector_key}`;\n    }\n    let selector_value = element.fields[field_name];\n    return relation_collection.find(selector_value) || null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/Element/Relations/BelongsTo.ts","import { Ajax, AjaxResponse } from '../../Ajax';\nimport { ActionConfigurationMap, ActionConfiguration } from '../../Configuration';\nimport { Element } from '../../Element';\nimport { Util } from '../../Util';\nimport { ElpongError } from '../../Errors';\nimport { ElementHelper } from '../ElementHelper';\nimport { UrlHelper, UrlOptions } from '../UrlHelper';\n\nexport interface ActionOptions {\n  data?: Object\n  headers?: Object\n}\n\nexport namespace Actions {\n  export function setup(element: Element, actions_config: ActionConfigurationMap) {\n    for (let method of ['get', 'post', 'put', 'delete']) {\n      element.actions[method] = (action_options: ActionOptions) => {\n        return execute(element, method.toUpperCase(), action_options);\n      }\n    }\n\n    Util.forEach(actions_config, (action_config: ActionConfiguration, action_name: string) => {\n      element.actions[Util.camelize(action_name)] = (user_options) => {\n        if (element.isNew() && !action_config.no_selector) { throw new ElpongError('elenew'); }\n        return executeCustom(element, action_name, action_config, user_options);\n      }\n    });\n  }\n\n  export function execute(element: Element, method: string, action_options: ActionOptions) {\n    if (!action_options) { action_options = {}; }\n\n    let data;\n\n    // element.snapshots.make(`before_${method.toLowerCase()}`);\n\n    if (action_options.data) {\n      data = action_options;\n    } else if (method !== 'GET') {\n      data = ElementHelper.toData(element);\n    }\n\n    if (method === 'POST') {\n      if (!element.isNew()) { throw new Error('Element is not new'); }\n    } else {\n      if (element.isNew()) { throw new Error('Element is new'); }\n    }\n\n    let promise = Ajax.executeRequest(\n      UrlHelper.createForElement(method, {} as ActionConfiguration, element, action_options as UrlOptions),\n      method,\n      data,\n      action_options.headers\n    );\n    promise.then((response: AjaxResponse) => {\n      if (response.data) {\n        element.merge(response.data);\n      }\n      // TODO element.snapshots.make(`after_${method.toLowerCase()}`);\n\n      let collection = element.collection();\n\n      if (Util.includes(collection.new_elements, element)) {\n        Util.removeFromArray(collection.new_elements, element);\n        return collection.elements[element.selector()] = element;\n      }\n    });\n\n    return promise;\n  }\n\n  export function executeCustom(hpe, action_name, action_settings, user_options) {\n    if (user_options == null) { user_options = {}; }\n    let method = action_settings.method.toUpperCase();\n    hpe.snapshots.make(`before_${method.toLowerCase()}`);\n\n    let data;\n    if (user_options.data) {\n      data = user_options.data;\n    } else if (!action_settings.without_data) {\n      data = ElementHelper.toData(hpe);\n    }\n\n    let promise = Ajax.executeRequest(\n      UrlHelper.createForElement(action_name, action_settings, hpe, user_options),\n      method,\n      data,\n      user_options.headers\n    );\n    promise.then((response: AjaxResponse) => {\n      let selector_value;\n      if (!action_settings.returns_other) {\n        if (response.data) {\n          hpe.mergeWith(response.data);\n        }\n        hpe.snapshots.make(`after_${method.toLowerCase()}`);\n      }\n\n      let collection = hpe.getCollection();\n\n      if ((selector_value = hpe.getSelectorValue()) && Util.includes(collection.new_elements, hpe)) {\n        Util.removeFromArray(collection.new_elements, hpe);\n        return collection.elements[selector_value] = hpe;\n      }\n    });\n\n    return promise;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/Element/Actions.ts","import { Element } from '../Element';\n\nexport namespace ElementHelper {\n  export function toData(element: Element) {\n    let collection = element.collection();\n    let scheme = collection.scheme();\n    let o = {};\n    let object = scheme.configuration().collections[collection.name].fields;\n    for (let field_name in object) {\n      let field_settings = object[field_name];\n      if (field_settings.no_send || field_settings.embedded_collection || field_settings.embedded_element) {\n        continue;\n      }\n      let field_value = element.fields[field_name];\n      o[field_name] = field_value;\n    }\n    return o;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers/ElementHelper.ts","import { ElpongError } from './Errors'\n\nif (typeof DEBUG !== 'undefined' && !DEBUG) {\n  var DEBUG = true;\n}\n\nexport class SchemeConfiguration {\n  readonly name: string;\n  readonly singular: string;\n  readonly selector: string;\n  readonly collections: CollectionConfigurationMap;\n\n  constructor(preconf: any) {\n    this.name = preconf.name;\n    if (DEBUG && !this.name) {\n      throw new ElpongError('confnn');\n    }\n    this.selector = preconf.selector;\n    if (DEBUG && !this.selector) {\n      throw new ElpongError('confns', preconf.name);\n    }\n    this.collections = {};\n\n    for (let collection_name in preconf.collections) {\n      let collection_preconf = preconf.collections[collection_name];\n\n      let collection_configuration: CollectionConfiguration = this.collections[collection_name] = {\n        singular: collection_preconf.singular || collection_name.slice(0, -1)\n      };\n\n      let props = ['fields', 'relations', 'actions', 'collection_actions'];\n      let relation_types = ['has_many', 'has_one', 'belongs_to'];\n\n      for (let prop of props) {\n        collection_configuration[prop] = collection_preconf[prop] || {};\n      }\n      if (collection_preconf.relations) {\n        for (let relation_type of relation_types) {\n          collection_configuration.relations[relation_type] = collection_preconf.relations[relation_type] || {};\n        }\n      }\n    }\n  }\n}\nexport interface CollectionConfigurationMap {\n  [name: string]: CollectionConfiguration;\n}\nexport interface CollectionConfiguration {\n  readonly singular: string\n  readonly fields?: FieldConfigurationMap;\n  readonly relations?: RelationConfigurationMaps;\n  readonly actions?: ActionConfigurationMap;\n  readonly collection_actions?: CollectionActionConfigurationMap;\n}\nexport interface FieldConfigurationMap {\n  readonly [name: string]: FieldConfiguration;\n}\nexport interface FieldConfiguration {\n  readonly reference: boolean;\n  readonly default: any;\n  readonly embedded_element: boolean;\n  readonly embedded_collection: boolean;\n  readonly no_send: boolean;\n}\nexport interface EmbeddedElementFieldConfiguration extends FieldConfiguration {\n  readonly collection: string;\n}\nexport interface EmbeddedCollectionFieldConfiguration extends FieldConfiguration {\n  readonly collection: string;\n}\nexport interface RelationConfigurationMaps {\n  readonly has_many: HasManyRelationConfigurationMap;\n  readonly has_one: HasOneRelationConfigurationMap;\n  readonly belongs_to: BelongsToRelationConfigurationMap;\n}\nexport interface HasManyRelationConfigurationMap {\n  readonly [name: string]: HasManyRelationConfiguration;\n}\nexport interface HasOneRelationConfigurationMap {\n  readonly [name: string]: HasOneRelationConfiguration;\n}\nexport interface BelongsToRelationConfigurationMap {\n  readonly [name: string]: BelongsToRelationConfiguration;\n}\nexport interface RelationConfiguration {\n\n}\nexport interface HasManyRelationConfiguration extends RelationConfiguration {\n  readonly field: string;\n  readonly collection: string;\n  readonly references_field: string;\n  // Polymorphism\n  readonly polymorphic: boolean;\n  readonly as: string; // block\n}\nexport interface HasOneRelationConfiguration extends RelationConfiguration {\n  readonly field: string;\n  readonly collection: string;\n  readonly references_field: string;\n  // Polymorphism\n  readonly polymorphic: boolean;\n  readonly as: string; // block\n}\nexport interface BelongsToRelationConfiguration extends RelationConfiguration {\n  readonly collection: string;\n  // Polymorphism\n  readonly polymorphic: boolean;\n  readonly field: string; // block_id\n  readonly collection_field: string; // block_collection\n}\nexport interface ActionConfigurationMap {\n  readonly [name: string]: ActionConfiguration;\n}\nexport interface CollectionActionConfigurationMap {\n  readonly [name: string]: CollectionActionConfiguration;\n}\nexport interface CollectionActionConfiguration {\n  readonly method: string;\n  readonly path: string;\n}\nexport interface ActionConfiguration {\n  readonly method: string;\n  readonly returns_other: boolean;\n  readonly no_data: boolean;\n  readonly no_selector: boolean;\n  readonly path: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Configuration.ts"],"sourceRoot":""}