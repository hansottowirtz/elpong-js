{"version":3,"sources":["webpack://elpong/webpack/universalModuleDefinition","webpack://elpong/webpack/bootstrap","webpack://elpong/./src/Util.ts","webpack://elpong/./src/Errors.ts","webpack://elpong/./src/Helpers/CollectionHelper.ts","webpack://elpong/./src/Element.ts","webpack://elpong/./src/Helpers/UrlHelper.ts","webpack://elpong/./src/Helpers/SchemeHelper.ts","webpack://elpong/./src/Ajax.ts","webpack://elpong/./src/Elpong.ts","webpack://elpong/./src/Scheme.ts","webpack://elpong/./src/Collection.ts","webpack://elpong/./src/Helpers.ts","webpack://elpong/./src/Helpers/Element/Fields/EmbeddedElement.ts","webpack://elpong/./src/Helpers/Element/Fields/EmbeddedCollection.ts","webpack://elpong/./src/Helpers/Element/Relations/HasMany.ts","webpack://elpong/./src/Helpers/ElementHelper.ts","webpack://elpong/./src/Snapshot.ts","webpack://elpong/./src/Configuration.ts","webpack://elpong/./src/main.ts","webpack://elpong/./src/Helpers/Element/Fields.ts","webpack://elpong/./src/Helpers/Element/Relations.ts","webpack://elpong/./src/Helpers/Element/Relations/HasOne.ts","webpack://elpong/./src/Helpers/Element/Relations/BelongsTo.ts","webpack://elpong/./src/Helpers/Element/Actions.ts","webpack://elpong/./src/Helpers/Element/Snapshots.ts","webpack://elpong/./src/Helpers/Collection/CollectionActions.ts","webpack://elpong/./src/FakeThings.ts"],"names":[],"mappings":"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","file":"elpong.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"elpong\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elpong\"] = factory();\n\telse\n\t\troot[\"elpong\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","import { FakeString, FakeArrayConstructor } from './FakeThings'\n\nexport const Util = {\n  // BREAK: new Object(),\n  // kebab: (string: string): string => {\n  //   return string.toLowerCase().replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').replace(/(é|ë)/g, 'e').split(' ').join('-');\n  // },\n  capitalize: (string: string): string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  },\n  camelize: (string: string): string => {\n    return string.replace(/_/g, ' ').replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(letter: string, index: number) {\n      if (index === 0) { return letter.toLowerCase(); } else { return letter.toUpperCase(); }\n    }).replace(/\\s+/g, '');\n  },\n  // arrayDiff: (array1: any[], array2: any[]): any[] => {\n  //   return array1.filter(i => array2.indexOf(i) < 0);\n  // },\n  removeFromArray: (array: any[], element: any): boolean => {\n    let i = array.indexOf(element);\n    if (i === -1) {\n      return false;\n    } else {\n      array.splice(i, i + 1);\n      return true;\n    }\n  },\n  // copy: (obj: Object) => {\n  //   if (typeof obj !== 'object') {\n  //     return obj;\n  //   }\n  //   let copy = obj.constructor();\n  //   for (let attr in obj) {\n  //     if (obj.hasOwnProperty(attr)) {\n  //       copy[attr] = obj[attr];\n  //     }\n  //   }\n  //   return copy;\n  // },\n  // merge: (obj1: Object, obj2: Object): Object => {\n  //   for (let attr in obj2) {\n  //     obj1[attr] = obj2[attr];\n  //   }\n  //   return obj1;\n  // },\n  isInteger: (value: any): value is number => {\n    return value === parseInt(value, 10);\n  },\n  isNumber: (value: any): value is number => {\n    return isFinite(value) && !isNaN(parseFloat(value));\n  },\n  isString: (value: any): value is string => {\n    return typeof value === 'string';\n  },\n  isRegExp: (value: any): value is RegExp => {\n    return Object.prototype.toString.call(value) == '[object RegExp]';\n  },\n  forEach: (o: Object, fn: (v: any, k: string) => void): void => {\n    for (let k in o) {\n      if (!o.hasOwnProperty(k)) { continue; }\n      let v = o[k];\n      fn(v, k)\n      // if (f(v, k) === Util.BREAK) {\n      //   break;\n      // }\n    }\n  },\n  // reverseForEach: (obj: Object, f: (k: string, v: any) => void): void => {\n  //   let arr: string[] = [];\n  //   let _break = false;\n  //   for (let key in obj) {\n  //     // add hasOwnPropertyCheck if needed\n  //     arr.push(key);\n  //   }\n  //   let i = arr.length - 1;\n  //   while ((i >= 0) && !_break) {\n  //     let v = f.call(obj, arr[i], obj[arr[i]]);\n  //     if (v === Util.BREAK) { _break = true; }\n  //     i--;\n  //   }\n  // },\n  endsWith: (string: string, search: string): boolean => {\n    if ((string as any as FakeString).endsWith) {\n      return (string as any as FakeString).endsWith(search);\n    } else {\n      return string.substr(-search.length) === search;\n    }\n  },\n  startsWith: (string: string, search: string): boolean => {\n    if ((string as any as FakeString).startsWith) {\n      return (string as any as FakeString).startsWith(search);\n    } else {\n      return string.substr(0, search.length) === search;\n    }\n  },\n  arrayFromHTML: (node_list: NodeListOf<HTMLElement>): Array<HTMLElement> => {\n    if ((Array as any as FakeArrayConstructor).from) {\n      return (Array as any as FakeArrayConstructor).from(node_list);\n    }\n    else {\n      return [].slice.call(node_list);\n    }\n  },\n  values: (obj: Object): any[] => {\n    let vals: any[] = [];\n\t\tfor (let key in obj) {\n\t\t\tif (obj.hasOwnProperty(key) && obj.propertyIsEnumerable(key)) {\n\t\t\t\tvals.push(obj[key]);\n\t\t\t}\n\t\t}\n\t\treturn vals;\n  },\n  includes: (a: any[], b: any): boolean => {\n\t  return a.indexOf(b) > -1;\n  },\n  equalsJSON: (a: any, b: any): boolean => {\n    for (let k in a) {\n      let v1 = a[k];\n      let v2 = b[k];\n      if (typeof v1 === 'object') {\n        if (!Util.equalsJSON(v1, v2)) {\n          return false;\n        }\n      } else {\n        if (v1 !== v2) {\n          return false;\n        }\n      }\n    }\n    return true;\n  },\n  copyJSON: (o: any): any => {\n    return JSON.parse(JSON.stringify(o));\n  }\n}\n","declare var DEBUG: boolean;\nif (typeof DEBUG === 'undefined') {\n  var DEBUG = true;\n}\n\nif (DEBUG) {\n  var error_text_map: Object = {\n    'schmnf': 'Scheme not found',\n    'collnf': 'Collection not found',\n    'collnf:s': 'Collection not found by singular name',\n    'collex': 'Collection with name already exists in scheme',\n    'elpgns': 'No scheme tags found',\n    'elpnce': 'No collection or element tags found',\n    'elndoc': 'No document',\n    'confns': 'Configuration has no selector',\n    'confnn': 'Configuration has no name',\n    'elenew': 'Element is new',\n    'elesna': 'Element has a selector value but is in new_elements array',\n    'elense': 'Element has no selector value but is in elements object',\n    'apinur': 'Api url has not yet been set',\n    'fldnsa': 'Field should be an array of selectors',\n    'elesch': 'Element selector changed',\n    'elesnf': 'Snapshot not found',\n    'elesti': 'Invalid snapshot identifier: must be number <= list.length, string or RegExp',\n    'eleafw': 'Pre element has an reference field that does not match the embedded element selector',\n    'elesnm': 'Selector is not matching get one request selector',\n    'elenos': 'No selector value given in getOne action',\n    'ajahct': 'Content-Type header not set to application/json',\n    'acgtda': 'GET request can\\'t have data. Use params'\n  }\n}\n\nexport class ElpongError extends Error {\n  constructor(message: string, argument?: string) {\n    let actual_message = DEBUG ? error_text_map[message] : message;\n    if (argument) {\n      super(`${actual_message}: ${argument}`);\n    }\n    else {\n      super(actual_message);\n    }\n  }\n}\n","import { Element } from '../Element';\nimport { Collection } from '../Collection';\nimport { CollectionConfiguration } from '../Configuration';\n\nexport namespace CollectionHelper {\n  export function getConfiguration(collection: Collection): CollectionConfiguration {\n    return collection.scheme().configuration().collections[collection.name];\n  }\n  export function getSingularName(collection: Collection): string {\n    return getConfiguration(collection).singular; // Last char cut in Configuration\n  }\n  export function addElement(collection: Collection, element: Element): void {\n    const selector_value = element.selector();\n    if (selector_value !== undefined) {\n      collection.elements.set(selector_value, element);\n    } else {\n      collection.new_elements.push(element);\n    }\n  }\n}\n","import { Collection } from './Collection';\nimport { Util } from './Util';\nimport { AjaxPromise } from './Ajax';\nimport { Snapshot } from './Snapshot';\nimport { PreElement } from './PreElement';\n\nimport { Fields } from './Helpers/Element/Fields';\nimport { Relations } from './Helpers/Element/Relations';\nimport { Actions, ActionOptions } from './Helpers/Element/Actions';\nimport { Snapshots } from './Helpers/Element/Snapshots';\n\nimport { EmbeddedElement } from './Helpers/Element/Fields/EmbeddedElement';\nimport { EmbeddedCollection } from './Helpers/Element/Fields/EmbeddedCollection';\n\nimport { ElpongError } from './Errors';\nimport { FieldConfiguration, EmbeddedElementFieldConfiguration, EmbeddedCollectionFieldConfiguration } from './Configuration';\n\nexport type SelectorValue = string|number;\n\nexport function isSelectorValue(v: any): v is SelectorValue {\n  return (!!v || v === 0 || v === '') && (typeof v === 'string' || typeof v === 'number');\n}\n\nexport interface Fields {\n  [field_key: string]: any;\n}\n\nexport type RelationFunction = () => Element|Element[]|null|undefined;\n\nexport interface Relations {\n  [relation_function_name: string]: RelationFunction;\n}\n\nexport type ActionFunction = (action_options?: ActionOptions) => AjaxPromise;\n\nexport interface Actions {\n  get: ActionFunction;\n  post: ActionFunction;\n  put: ActionFunction;\n  delete: ActionFunction;\n  [action_name: string]: ActionFunction;\n}\n\nexport interface Snapshots {\n  make: Function;\n  list: Snapshot[];\n  current_index: number;\n  undo: (identifier: number|string|RegExp) => Element;\n  lastPersisted: () => Snapshot|undefined;\n  lastWithTag: (tag: string|RegExp) => Snapshot|undefined;\n  last: () => Snapshot|undefined;\n  isPersisted: () => boolean;\n}\n\nexport class Element {\n  readonly _collection: Collection;\n  readonly fields: Fields = {} as Fields;\n  readonly relations: Relations = {} as Relations;\n  readonly actions: Actions = {} as Actions;\n  readonly snapshots: Snapshots = {} as Snapshots;\n\n  constructor(collection: Collection, pre_element: PreElement) {\n    this._collection = collection;\n\n    let collection_config = collection.configuration();\n\n    Fields.setup(this, collection_config.fields, pre_element);\n    Relations.setup(this, collection_config.relations);\n    Actions.setup(this, collection_config.actions);\n    Snapshots.setup(this);\n\n    this.snapshots.make('creation');\n  }\n\n  collection(): Collection {\n    return this._collection;\n  }\n\n  selector(): SelectorValue|undefined {\n    return this.fields[this.collection().scheme().configuration().selector];\n  }\n\n  remove() {\n    const selector_value: SelectorValue|undefined = this.selector();\n    if (selector_value !== undefined) {\n      return this.actions.delete().then(() => {\n        let elements = this.collection().elements;\n        elements.delete(selector_value);\n      });\n    } else {\n      Util.removeFromArray(this.collection().new_elements, this);\n      return {\n        then: function(fn: Function) { return fn(); },\n        catch: function() {}\n      };\n    }\n  }\n\n  save(): AjaxPromise {\n    if (this.isNew()) {\n      return this.actions.post();\n    } else {\n      return this.actions.put();\n    }\n  }\n\n  isNew(): boolean {\n    if (Util.includes(this.collection().new_elements, this)) {\n      if (this.selector()) {\n        throw new ElpongError('elesna');\n      } else {\n        return true;\n      }\n    } else {\n      if (!this.selector()) {\n        throw new ElpongError('elense');\n      } else {\n        return false;\n      }\n    }\n  }\n\n  merge(pre_element: PreElement): this {\n    let collection_config = this.collection().configuration();\n    let selector_key = this.collection().scheme().configuration().selector;\n    Util.forEach(collection_config.fields, (field_config: FieldConfiguration, field_key: string) => {\n      let field_value;\n      if (field_value = pre_element[field_key]) {\n        if (field_config.embedded_element) {\n          EmbeddedElement.handle(this, pre_element, field_key, field_config as EmbeddedElementFieldConfiguration);\n        } else if (field_config.embedded_collection) {\n          EmbeddedCollection.handle(this, pre_element, field_key, field_config as EmbeddedCollectionFieldConfiguration);\n        } else if (field_key === selector_key) {\n          let selector_value = this.fields[field_key];\n          if ((selector_value !== field_value) && isSelectorValue(selector_value) && isSelectorValue(field_value)) {\n            throw new ElpongError('elesch', `${selector_value} -> ${field_value}`);\n          }\n          this.fields[field_key] = field_value;\n        } else {\n          this.fields[field_key] = field_value;\n        }\n      }\n    });\n    return this;\n  }\n\n  // isPersisted() {\n  //   if (this.isNew()) { return false; }\n  //   let { data } = this.snapshots.getLastPersisted();\n  //   let object = HPP.Helpers.Element.getFields(this);\n  //   for (let k in object) {\n  //     let v = object[k];\n  //     if (data[k] !== v) { return false; }\n  //   }\n  //   return true;\n  // }\n}","import { ActionConfiguration } from '../Configuration';\nimport { Element } from '../Element';\nimport { Collection } from '../Collection';\nimport { ElpongError } from '../Errors';\n\nexport interface UrlHelperOptions extends UrlOptions {\n  suffix?: string;\n  params?: any;\n}\n\nexport interface UrlHelperElementOptions extends UrlHelperOptions {\n  no_selector?: boolean;\n}\n\nexport interface UrlHelperCollectionOptions extends UrlHelperOptions {\n}\n\nexport interface UrlOptions {\n  params?: any;\n}\n\nexport namespace UrlHelper {\n  export function createForElement(element: Element, url_options: UrlHelperElementOptions): string {\n    let path, url;\n    let collection = element.collection();\n    let scheme = collection.scheme();\n    let api_url = scheme.getApiUrl();\n    if (!api_url) { throw new ElpongError('apinur'); }\n\n    url = `${api_url}/${collection.name}`;\n    if (!url_options.no_selector) {\n      url = `${url}/${element.selector()}`;\n    }\n\n    if (url_options.suffix) { url = `${url}/${url_options.suffix}`; }\n    if (url_options.params) { url = appendParamsToUrl(url, url_options.params); }\n    return url;\n  }\n\n  export function createForCollection(collection: Collection, url_options: UrlHelperOptions): string {\n    let api_url = collection.scheme().getApiUrl();\n    if (!api_url) { throw new ElpongError('apinur'); }\n\n    let url = `${api_url}/${collection.name}`; //HPP.Helpers.Url.createForCollection(, hpe, user_options) # (action_name, element, user_options = {}, suffix)\n    if (url_options.suffix) { url = `${url}/${url_options.suffix}`; }\n    if (url_options.params) { url = appendParamsToUrl(url, url_options.params); }\n    return url;\n  }\n\n  export function trimSlashes(s: string): string {\n    return s.replace(/^\\/|\\/$/g, '');\n  }\n\n  export function isFqdn(s: string): boolean {\n    return /^https?:\\/\\//.test(s);\n  }\n\n  export function appendParamsToUrl(url: string, params: any): string {\n    url = `${url}?`;\n    for(let k in params) {\n      url = `${url}${k}=${encodeURIComponent(params[k])}&`;\n    }\n    url = url.slice(0, -1);\n    return url;\n  }\n}\n","import { Scheme } from '../Scheme';\nimport { ElpongError } from '../Errors';\nimport { CollectionHelper } from './CollectionHelper';\nimport { Collection } from '../Collection';\n\nexport namespace SchemeHelper {\n  export function getCollectionBySingularName(scheme: Scheme, singular_name: string) {\n    for (let collection_name in scheme.getCollections()) {\n      let collection = scheme.select(collection_name);\n      if (CollectionHelper.getSingularName(collection) === singular_name) { return collection; }\n    }\n    throw new ElpongError('collnf:s', singular_name);\n  }\n}\n","/// <reference types=\"jquery\"/>\n/// <reference types=\"angular\"/>\n\nimport { ElpongError } from './Errors';\nimport { Util } from './Util';\n\nexport type AjaxPromiseThenOnResolveFunction = (response: AjaxResponse) => void;\nexport type AjaxPromiseThenFunction = (resolve_fn: AjaxPromiseThenOnResolveFunction) => any;\n\nexport type AjaxPromise = Promise<AjaxResponse>;\n\nexport interface AjaxResponse extends Response {\n  data?: any;\n}\n\nexport type AjaxExternalFunction = Function | any;\nexport type AjaxFunction = (url: string, instruction: AjaxInstruction) => AjaxPromise;\n\nexport interface AjaxObject {\n  data: {};\n}\n\nexport interface AjaxInstruction {\n  data: {};\n  method: string;\n  headers: {};\n  [prop: string]: any;\n}\n\nexport type AjaxData = any;\n\nexport interface AjaxHeaders {\n  [name: string]: string;\n}\n\nexport const enum AjaxAdapterType {\n  Fetch = 0,\n  Angular = 1,\n  AngularJS = 2,\n  JQuery = 3\n}\n\nexport type AjaxAdapterTypeString = 'fetch'|'angular'|'angularjs'|'jquery';\n\nexport namespace Ajax {\n  let ajaxFunction: AjaxFunction;\n\n  interface AjaxFunctionOptions {\n    method: string;\n    type: string;\n    url: string;\n    data: string;\n    body: string;\n    headers: AjaxHeaders;\n    dataType: 'json';\n    responseType: 'json';\n  }\n\n  export function executeRequest(url: string, method: string, data?: AjaxData, headers?: AjaxHeaders) {\n    if (!headers) { headers = {}; }\n    headers['Accept'] = headers['Content-Type'] = 'application/json';\n    const serialized_data = JSON.stringify(data === undefined ? {} : data);\n    let options: AjaxFunctionOptions = {\n      method: method,\n      type: method,\n      url: url,\n      data: serialized_data,\n      body: serialized_data,\n      headers: headers,\n      dataType: 'json',\n      responseType: 'json'\n    };\n    return ajaxFunction(options.url, options);\n  }\n\n  // Set the http function used for requests\n  // The function should accept one object with keys\n  // method, url, params, headers\n  // and return a promise-like object\n  // with then and catch\n  //\n  // @note Like $http or jQuery.ajax or http.request or fetch\n  // @param {Function} fn The function.\n  // @param {string} type The function.\n  export function setAjaxFunction(fn: AjaxExternalFunction, adapter_type?: AjaxAdapterType|AjaxAdapterTypeString) {\n    const type = adapter_type ? convertAjaxAdapterTypeStringToType(adapter_type) : undefined;\n    switch (type) {\n      case AjaxAdapterType.JQuery:\n        ajaxFunction = (url: string, instruction: AjaxInstruction) => {\n          let deferred = jQuery.Deferred();\n          let ajax = (fn as Function)(url, instruction);\n          ajax.then((data: any, status: any, jqxhr: any) => deferred.resolve({data, status: jqxhr.statusCode().status, headers: jqxhr.getAllResponseHeaders()}));\n          ajax.catch((data: any, status: any, jqxhr: any) => deferred.reject({data, status: jqxhr.statusCode().status, headers: jqxhr.getAllResponseHeaders()}));\n          // Convert to Promise, as Typescript users are probably not using jQuery\n          // and if so, they won't have a lot of trouble with the differences.\n          return deferred.promise() as any as Promise<any>;\n        }\n        break;\n      case AjaxAdapterType.Fetch:\n        ajaxFunction = (url: string, instruction: AjaxInstruction) => {\n          return new Promise((resolve, reject) => {\n            // Request with GET/HEAD method cannot have body\n            (instruction as any).body = (instruction.method === 'GET') ? undefined : instruction.data;\n            let http_promise = (fn as Function)(url, instruction) as Promise<Response>;\n            http_promise.then((response: Response) => {\n              if (response.status === 204) {\n                resolve(response);\n              } else {\n                const contentType = response.headers.get('content-type');\n                if (!contentType || contentType.indexOf('json') < 0) throw new ElpongError('ajahct');\n                let json_promise = response.json();\n                json_promise.then((json: string) => {\n                  (response as any).data = json;\n                  resolve(response);\n                });\n                json_promise.catch(reject);\n              }\n            });\n            http_promise.catch(reject);\n          });\n        }\n        break;\n      case AjaxAdapterType.Angular:\n        ajaxFunction = (url: string, instruction: AjaxInstruction) => {\n          return new Promise<AjaxResponse>((resolve, reject) => {\n            instruction.responseType = undefined;\n            (fn as any).request.bind(fn)(url, instruction).subscribe((response: any) => {\n              if (response.status === 204) {\n                resolve(response)\n              } else {\n                const contentType = response.headers.get('content-type');\n                if (!contentType || contentType.indexOf('json') < 0) throw new Error('ajahct');\n                const json = response.json();\n                (response as any).data = json;\n                resolve(response);\n              }\n            }, (httpErrorResponse: any) => { reject(httpErrorResponse); });\n          });\n        }\n        break;\n      default:\n        // Default is AngularJS behavior, a promise that resolves to a response\n        // object with the payload in the data field.\n        ajaxFunction = (url: string, instruction: AjaxInstruction) => (fn as Function)(instruction);\n    }\n  }\n\n  export function convertAjaxAdapterTypeStringToType(type: AjaxAdapterType|AjaxAdapterTypeString): AjaxAdapterType {\n    if (!Util.isInteger(type)) {\n      const i = ['fetch', 'angular', 'angularjs', 'jquery'].indexOf(type);\n      return i > -1 ? i : 0;\n    } else {\n      return type;\n    }\n  }\n}\n","import { Scheme } from './Scheme';\nimport { Collection } from './Collection';\nimport { SchemeConfiguration, PreSchemeConfiguration } from './Configuration';\nimport { ElpongError } from './Errors';\nimport { Util } from './Util';\nimport { Ajax, AjaxExternalFunction, AjaxAdapterType, AjaxAdapterTypeString } from './Ajax';\n\ndeclare let DEBUG: boolean;\n\ninterface SchemeMap {\n  [name: string]: Scheme;\n}\n\ninterface CollectionMap {\n  [name: string]: Collection;\n}\n\nlet schemes: SchemeMap = {};\nlet autoload: boolean = false;\n\nexport namespace Elpong {\n  export function add(scheme_config: PreSchemeConfiguration): Scheme {\n    let scheme = new Scheme(scheme_config);\n    return schemes[scheme.name] = scheme;\n  }\n\n  export function get(name: string): Scheme {\n    let scheme: Scheme;\n    if (scheme = schemes[name]) {\n      return scheme;\n    }\n    throw new ElpongError('schmnf', name); // Scheme not found\n  }\n\n  export function load(ignore_empty: boolean): void {\n    if (typeof document === 'undefined') return;\n\n    let scheme_tags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll('meta[name=elpong-scheme]') as NodeListOf<HTMLMetaElement>;\n\n    if (!ignore_empty && !scheme_tags.length) {\n      throw new ElpongError('elpgns');\n    }\n\n    for (let scheme_tag of Util.arrayFromHTML(scheme_tags) as HTMLMetaElement[]) {\n      let scheme = Elpong.add(JSON.parse(scheme_tag.content));\n    }\n  }\n\n  export function setAjax(fn: AjaxExternalFunction, type?: AjaxAdapterType|AjaxAdapterTypeString): void {\n    Ajax.setAjaxFunction(fn, type);\n  }\n\n  export function enableAutoload(): void {\n    autoload = true\n    Elpong.load(true);\n  }\n\n  export function isAutoloadEnabled(): boolean {\n    return autoload;\n  }\n\n  export function tearDown(): void {\n    autoload = false;\n    schemes = {};\n  }\n}\n","import { Collection } from './Collection';\nimport { SchemeConfiguration, PreSchemeConfiguration } from './Configuration';\nimport { ElpongError } from './Errors';\nimport { UrlHelper } from './Helpers';\nimport { Elpong } from './Elpong';\n\nexport interface CollectionMap {\n  [name: string]: Collection;\n}\n\nexport class Scheme {\n  name: string;\n  private _configuration: SchemeConfiguration;\n  private _collections: CollectionMap;\n  private api_url: string;\n\n  constructor(preSchemeConfiguration: PreSchemeConfiguration) {\n    const sc = new SchemeConfiguration(preSchemeConfiguration);\n    this._configuration = sc;\n    this.name = sc.name;\n    this._collections = {};\n\n    // Create collections\n    for (let collection_name in sc.collections) {\n      let collection_settings = sc.collections[collection_name];\n      let collection = new Collection(this, collection_name);\n      this._collections[collection_name] = collection;\n    }\n\n    if (Elpong.isAutoloadEnabled()) {\n      for (let collection_name in sc.collections) {\n        this._collections[collection_name].load(true);\n      }\n    }\n  }\n\n  configuration(): SchemeConfiguration {\n    return this._configuration;\n  }\n\n  select(name: string): Collection {\n    let collection;\n    if (collection = this._collections[name]) {\n      return collection;\n    } else {\n      throw new ElpongError('collnf', name);\n    }\n  }\n\n  setApiUrl(url: string): string {\n    const trimmed_url = UrlHelper.trimSlashes(url);\n    return this.api_url = UrlHelper.isFqdn(trimmed_url) ? trimmed_url : `/${trimmed_url}`;\n  }\n\n  getApiUrl(): string {\n    return this.api_url;\n  }\n\n  getCollections(): CollectionMap {\n    return this._collections;\n  }\n}\n","import { Elpong } from './Elpong';\nimport { Scheme } from './Scheme';\nimport { CollectionHelper } from './Helpers';\nimport { Element, SelectorValue } from './Element';\nimport { Util } from './Util';\nimport { ActionConfiguration, CollectionConfiguration } from './Configuration';\nimport { CollectionActions, CollectionActionOptions } from './Helpers/Collection/CollectionActions';\nimport { AjaxPromise } from './Ajax';\nimport { ElpongError } from './Errors';\nimport { FakeMap } from './FakeThings';\nimport { PreElement } from './PreElement';\n\nexport type ElementMap = FakeMap;\n\nexport type GetAllCollectionActionFunction = (action_options?: CollectionActionOptions) => AjaxPromise;\nexport type GetOneCollectionActionFunction = (selector_value?: SelectorValue, action_options?: CollectionActionOptions) => AjaxPromise;\n// SelectorValue needs to be an argument type because of https://github.com/Microsoft/TypeScript/issues/10042\nexport type CustomCollectionActionFunction = (action_options?: CollectionActionOptions|SelectorValue) => AjaxPromise;\n\nexport interface CollectionActions {\n  [action_name: string]: CustomCollectionActionFunction;\n  getAll: GetAllCollectionActionFunction;\n  getOne: GetOneCollectionActionFunction;\n}\n\nexport interface CollectionArrayOptions {\n  no_new?: boolean;\n}\n\nexport interface CollectionFindByOptions extends CollectionArrayOptions {\n  multiple?: boolean;\n}\n\nexport interface FieldsKeyValueMap {\n  [key: string]: any;\n}\n\nexport class Collection {\n  private readonly _scheme: Scheme;\n  readonly name: string;\n  private readonly default_pre_element: PreElement;\n  readonly elements: FakeMap;\n  readonly new_elements: Element[];\n  readonly actions: CollectionActions;\n\n  constructor(scheme: Scheme, name: string) {\n    this._scheme = scheme;\n    this.name = name;\n    this.elements = new FakeMap();\n    this.new_elements = [];\n    this.default_pre_element = {};\n\n    let config = CollectionHelper.getConfiguration(this);\n\n    for (let field_key in config.fields) {\n      let field_config = config.fields[field_key];\n\n      if (field_config.default) {\n        this.default_pre_element[field_key] = field_config.default;\n      }\n    }\n\n    this.actions = {\n      getAll: (action_options?: CollectionActionOptions) => {\n        return CollectionActions.executeGetAll(this, action_options);\n      },\n      getOne: (selector_value?: SelectorValue, action_options?: CollectionActionOptions) => {\n        if (selector_value === undefined) { throw new ElpongError('elenos'); }\n        return CollectionActions.executeGetOne(this, selector_value, action_options);\n      }\n    };\n    Util.forEach(config.collection_actions, (action_config: ActionConfiguration, action_name: string) => {\n      this.actions[Util.camelize(action_name)] = (action_options: CollectionActionOptions = {}) =>\n        CollectionActions.executeCustom(this, action_name, action_config, action_options);\n    });\n  }\n\n  scheme(): Scheme {\n    return this._scheme;\n  }\n\n  load(ignore_empty: boolean): void {\n    if (typeof document === 'undefined') throw new ElpongError('elndoc');\n\n    let collection_tags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll(`meta[name=elpong-collection][collection='${this.name}'][scheme='${this.scheme().name}']`) as NodeListOf<HTMLMetaElement>;\n    let element_tags: NodeListOf<HTMLMetaElement> =\n      document.querySelectorAll(`meta[name=elpong-element][collection='${this.name}'][scheme='${this.scheme().name}']`) as NodeListOf<HTMLMetaElement>;\n\n    if (!ignore_empty && !collection_tags.length && !element_tags.length) {\n      throw new ElpongError('elpnce');\n    }\n\n    for (let collection_tag of Util.arrayFromHTML(collection_tags) as HTMLMetaElement[]) {\n      for (let pre_element of JSON.parse(collection_tag.content) as PreElement[]) {\n        this.buildOrMerge(pre_element);\n      }\n    }\n    Util.arrayFromHTML(element_tags).map((element_tag: HTMLMetaElement) =>\n      this.buildOrMerge(JSON.parse(element_tag.content)));\n  }\n\n  configuration(): CollectionConfiguration {\n    return CollectionHelper.getConfiguration(this);\n  }\n\n  // Get an array of all elements\n  //\n  // @return {Element[]} Array of elements\n  array(options?: CollectionArrayOptions): Element[] {\n    if (!options) { options = {no_new: false}; }\n    let arr = options.no_new ? [] : this.new_elements;\n    return arr.concat(this.elements.values());\n  }\n\n  find(selector_value: SelectorValue): Element|null {\n    return this.elements.get(selector_value) || null;\n  }\n\n  findBy(fields_key_value_map: FieldsKeyValueMap, find_options: CollectionFindByOptions): Element|Element[]|null {\n    if (!find_options) { find_options = {}; }\n\n    let is_correct;\n    let arr = this.array(find_options);\n    let response_arr: Element[] = [];\n\n    for (let element of arr) {\n      is_correct = true;\n      for (let field_key in fields_key_value_map) {\n        let field_value = fields_key_value_map[field_key];\n        if (element.fields[field_key] !== field_value) {\n          is_correct = false;\n          break;\n        }\n      }\n      if (is_correct) {\n        if (find_options.multiple) {\n          response_arr.push(element);\n        } else {\n          return element;\n        }\n      }\n    }\n    if (find_options.multiple) {\n      return response_arr;\n    } else {\n      return null;\n    }\n  }\n\n  build(pre_element: PreElement): Element {\n    if (!pre_element) { pre_element = this.default_pre_element; }\n    let el = new Element(this, pre_element);\n    CollectionHelper.addElement(this, el);\n    return el;\n  }\n\n  buildOrMerge(pre_element: PreElement): Element {\n    let sv;\n    if (sv = pre_element[this.scheme().configuration().selector]) {\n      let el;\n      if (el = this.find(sv)) {\n        return el.merge(pre_element);\n      } else {\n        return this.build(pre_element);\n      }\n    } else {\n      return this.build(pre_element);\n    }\n  }\n}\n","export { UrlHelper } from './Helpers/UrlHelper';\nexport { CollectionHelper } from './Helpers/CollectionHelper';\n","import { Element } from '../../../Element';\nimport { SchemeHelper } from '../../SchemeHelper';\nimport { EmbeddedElementFieldConfiguration } from '../../../Configuration';\nimport { ElpongError } from '../../../Errors';\nimport { PreElement } from '../../../PreElement';\n\nexport namespace EmbeddedElement {\n  export function handle(element: Element, pre_element: PreElement, field_key: string, field_config: EmbeddedElementFieldConfiguration): void {\n    let embedded_element_collection;\n    const embedded_pre_element = pre_element[field_key];\n    if (!embedded_pre_element) { return; }\n    const collection = element.collection();\n    const scheme = collection.scheme();\n\n    if (field_config.collection) {\n      embedded_element_collection = scheme.select(field_config.collection);\n    } else {\n      embedded_element_collection = SchemeHelper.getCollectionBySingularName(scheme, field_key);\n    }\n\n    const embedded_element = embedded_element_collection.buildOrMerge(embedded_pre_element);\n\n    const reference_field_key = field_config.reference_field || `${field_key}_${scheme.configuration().selector}`;\n\n    const reference_field_config = collection.configuration().fields[reference_field_key]\n    if(!reference_field_config) return;\n    if(!reference_field_config.reference) return;\n\n    const selector_value = embedded_element.selector();\n\n    const reference_field_value = pre_element[reference_field_key];\n    if (reference_field_value !== undefined && (reference_field_value != selector_value)) {\n      throw new ElpongError('eleafw', `${reference_field_value} != ${selector_value}`);\n    }\n    element.fields[reference_field_key] = selector_value;\n  }\n}\n","import { Element } from '../../../Element';\nimport { EmbeddedCollectionFieldConfiguration } from '../../../Configuration';\nimport { ElpongError } from '../../../Errors';\nimport { Collection } from '../../../Collection';\nimport { Scheme } from '../../../Scheme';\nimport { Util } from '../../../Util';\nimport { CollectionHelper } from '../../CollectionHelper';\nimport { PreElement } from '../../../PreElement';\n\nexport namespace EmbeddedCollection {\n  export function handle(element: Element, pre_element: PreElement, field_key: string, field_config: EmbeddedCollectionFieldConfiguration): void {\n    let embedded_pre_collection;\n\n    if (!(embedded_pre_collection = pre_element[field_key])) { return; }\n    let collection: Collection = element.collection();\n    let scheme: Scheme = collection.scheme();\n    let embedded_element_collection = scheme.select(field_config.collection || field_key);\n\n    Util.forEach(embedded_pre_collection, function(embedded_pre_element: PreElement) {\n      let embedded_element = new Element(embedded_element_collection, embedded_pre_element);\n      CollectionHelper.addElement(embedded_element_collection, embedded_element);\n    });\n  }\n}\n","import { Element } from '../../../Element';\nimport { Collection, CollectionFindByOptions } from '../../../Collection';\nimport { CollectionHelper } from '../../CollectionHelper';\nimport { Util } from '../../../Util';\nimport { HasManyRelationConfiguration, HasOneRelationConfiguration, FieldConfiguration } from '../../../Configuration';\nimport { ElpongError } from '../../../Errors';\n\nexport type HasManyRelationFunction = () => Element[];\n\nexport namespace HasMany {\n  export function setup(element: Element, relation_collection_name: string, relation_settings: HasManyRelationConfiguration) {\n    let collection = element.collection();\n    let collection_config = collection.configuration();\n\n    let relation_collection = collection.scheme().select(relation_settings.collection || relation_collection_name);\n\n    // let relation_field_settings: FieldConfiguration;\n    // if (relation_field_settings = collection_config.fields[references_field_key]) {\n    //   // throw new Error(\"Field #{field_key} of collection #{collection.getName()} are not references\") if !relation_field_settings.references\n    //   return element.relations[Util.camelize(relation_collection_name)] = (): Element[] =>\n    //     getHasManyRelationArrayThroughReferencesField(element, relation_collection, references_field_key);\n    //\n    // }\n\n    if (relation_settings.inline) {\n      let references_field_key = relation_settings.inline_field || `${relation_collection_name}_${collection.scheme().configuration().selector}s`; // dogs_ids, unless specified otherwise\n\n      return element.relations[Util.camelize(relation_collection_name)] = (): Element[] =>\n        getHasManyRelationArrayInline(element, relation_collection, references_field_key);\n    } else { // normal has_many relationship\n      return element.relations[Util.camelize(relation_collection_name)] =\n        getHasManyRelationFunction(element, collection, relation_settings, relation_collection);\n    }\n  }\n\n  export function getHasManyRelationFunction(element: Element, collection: Collection, relation_config: HasManyRelationConfiguration|HasOneRelationConfiguration, relation_collection: Collection, limit_to_one?: boolean): HasManyRelationFunction {\n    let has_many_field_key: string;\n    let collection_singular_name = CollectionHelper.getSingularName(collection);\n    let relation_collection_settings = relation_collection.configuration();\n\n    let selector_key = collection.scheme().configuration().selector;\n\n    if (relation_config.polymorphic) {\n      has_many_field_key = `${relation_config.as}_${selector_key}`;\n      let has_many_collection_field_key = `${relation_config.as}_collection`;\n\n      return (): Element[] => getPolymorphicHasManyRelationArray(element, relation_collection, has_many_field_key, has_many_collection_field_key, limit_to_one);\n    } else {\n      if (relation_config.field) {\n        has_many_field_key = relation_config.field;\n      } else if (relation_config.as) {\n        has_many_field_key = `${relation_config.as}_${selector_key}`;\n      } else {\n        has_many_field_key = `${collection_singular_name}_${selector_key}`;\n      }\n      return (): Element[] => getHasManyRelationArray(element, relation_collection, has_many_field_key, limit_to_one);\n    }\n  }\n\n  function getHasManyRelationArray(element: Element, relation_collection: Collection, has_many_field_key: string, limit_to_one?: boolean): Element[] {\n    let element2_arr: Element[] = [];\n    let selector_value = element.selector();\n\n    for (let element2 of relation_collection.array()) {\n      if (selector_value === element2.fields[has_many_field_key]) {\n        element2_arr.push(element2);\n        if (limit_to_one) {\n          return element2_arr;\n        }\n      }\n    }\n\n    return element2_arr;\n  }\n\n  function getPolymorphicHasManyRelationArray(element: Element, relation_collection: Collection, has_many_field_key: string, has_many_collection_field_key: string, limit_to_one?: boolean): Element[] {\n    let element2_arr: Element[] = [];\n    let selector_value = element.selector();\n    let collection_name = element.collection().name;\n\n    for (let element2 of relation_collection.array()) {\n      if (selector_value === element2.fields[has_many_field_key] && collection_name === element2.fields[has_many_collection_field_key]) {\n        element2_arr.push(element2);\n        if (limit_to_one) {\n          return element2_arr;\n        }\n      }\n    }\n\n    return element2_arr;\n  }\n\n  function getHasManyRelationArrayInline(element: Element, relation_collection: Collection, field_key: string): Element[] {\n    let selector_value_arr = element.fields[field_key];\n    if (!Array.isArray(selector_value_arr)) { throw new ElpongError('fldnrf', field_key); }\n    let element2_arr: Element[] = [];\n    for (let element2 of relation_collection.array()) {\n      if (Util.includes(selector_value_arr, element2.selector())) { element2_arr.push(element2); }\n    }\n    return element2_arr;\n  }\n}\n","import { Element } from '../Element';\nimport { Util } from '../Util';\n\nexport namespace ElementHelper {\n  export function toData(element: Element, full_duplicate?: boolean) {\n    let collection = element.collection();\n    let scheme = collection.scheme();\n    let o = {};\n    let object = scheme.configuration().collections[collection.name].fields;\n    for (let field_key in object) {\n      let field_settings = object[field_key];\n      if (field_settings.no_send || field_settings.embedded_collection || field_settings.embedded_element) {\n        continue;\n      }\n      let field_value = element.fields[field_key];\n      if (full_duplicate && (typeof field_value === 'object')) {\n        o[field_key] = Util.copyJSON(field_value);\n      } else {\n        o[field_key] = field_value;\n      }\n    }\n    return o;\n  }\n}\n","import { Element } from './Element';\nimport { ElementHelper } from './Helpers/ElementHelper';\n\nexport class Snapshot {\n  public tag?: string;\n  public time: number;\n  public data: Object;\n  public element: Element;\n  public undone: boolean;\n  public index: number;\n\n  constructor(element: Element, tag?: string) {\n    this.element = element;\n    this.tag = tag;\n    this.data = ElementHelper.toData(element, true);\n    this.undone = false;\n    this.time = Date.now();\n    this.index = element.snapshots.list.length;\n    element.snapshots.list.push(this);\n    element.snapshots.current_index = this.index;\n  }\n\n  revert() {\n    let list = this.element.snapshots.list;\n    this.element.merge(this.data);\n    this.element.snapshots.current_index = this.index;\n    this.undone = false;\n    for (let i = this.index + 1, l = list.length; i < l; i++) {\n      list[i].undone = true;\n    }\n  }\n}\n","import { ElpongError } from './Errors'\n\ndeclare var DEBUG: boolean;\nif (typeof DEBUG === 'undefined') {\n  var DEBUG = true;\n}\n\nexport class SchemeConfiguration implements PreSchemeConfiguration {\n  readonly name: string;\n  readonly selector: string;\n  readonly collections: CollectionConfigurationMap;\n\n  constructor(preconf: PreSchemeConfiguration) {\n    this.name = preconf.name;\n    if (DEBUG && !this.name) {\n      throw new ElpongError('confnn');\n    }\n    this.selector = preconf.selector;\n    if (DEBUG && !this.selector) {\n      throw new ElpongError('confns', preconf.name);\n    }\n    this.collections = {} as CollectionConfigurationMap;\n\n    for (let collection_name in preconf.collections) {\n      let collection_preconf = preconf.collections[collection_name];\n\n      let collection_configuration: CollectionConfiguration = this.collections[collection_name] = {\n        singular: collection_preconf.singular || collection_name.slice(0, -1)\n      } as CollectionConfiguration;\n\n      let props = ['fields', 'relations', 'actions', 'collection_actions'];\n      let relation_types = ['has_many', 'has_one', 'belongs_to'];\n\n      for (let prop of props) {\n        collection_configuration[prop] = collection_preconf[prop] || {};\n      }\n      let relations_conf;\n      if (relations_conf = collection_preconf.relations) {\n        for (let relation_type of relation_types) {\n          relations_conf[relation_type] =\n            (collection_preconf.relations as RelationConfigurationMaps)[relation_type] || {};\n        }\n      }\n    }\n  }\n}\nexport interface PreSchemeConfiguration {\n  name: string;\n  selector: string;\n  collections: CollectionConfigurationMapWithOptionals;\n}\nexport interface SchemeConfiguration {\n  readonly name: string;\n  readonly selector: string;\n  readonly collections: CollectionConfigurationMap;\n}\nexport interface CollectionConfigurationMapWithOptionals {\n  [name: string]: CollectionConfigurationWithOptionals;\n}\nexport interface CollectionConfigurationMap extends CollectionConfigurationMapWithOptionals {\n  [name: string]: CollectionConfiguration;\n}\nexport interface CollectionConfigurationWithOptionals {\n  readonly singular?: string;\n  readonly fields: FieldConfigurationMap;\n  readonly relations?: RelationConfigurationMapsWithOptionals;\n  readonly actions?: ActionConfigurationMap;\n  readonly collection_actions?: CollectionActionConfigurationMap;\n}\nexport interface CollectionConfiguration extends CollectionConfigurationWithOptionals {\n  readonly singular: string;\n  readonly fields: FieldConfigurationMap;\n  readonly relations: RelationConfigurationMaps;\n  readonly actions: ActionConfigurationMap;\n  readonly collection_actions: CollectionActionConfigurationMap;\n}\nexport interface FieldConfigurationMap {\n  readonly [name: string]: FieldConfiguration;\n}\nexport interface FieldConfiguration {\n  readonly reference?: boolean;\n  readonly default?: any;\n  readonly embedded_element?: boolean;\n  readonly embedded_collection?: boolean;\n  readonly no_send?: boolean;\n}\nexport interface EmbeddedElementFieldConfiguration extends FieldConfiguration {\n  readonly reference_field?: string;\n  readonly collection?: string;\n}\nexport interface EmbeddedCollectionFieldConfiguration extends FieldConfiguration {\n  readonly collection?: string;\n}\nexport interface RelationConfigurationMapsWithOptionals {\n  readonly has_many?: HasManyRelationConfigurationMap;\n  readonly has_one?: HasOneRelationConfigurationMap;\n  readonly belongs_to?: BelongsToRelationConfigurationMap;\n}\nexport interface RelationConfigurationMaps {\n  readonly has_many: HasManyRelationConfigurationMap;\n  readonly has_one: HasOneRelationConfigurationMap;\n  readonly belongs_to: BelongsToRelationConfigurationMap;\n}\nexport interface HasManyRelationConfigurationMap {\n  readonly [name: string]: HasManyRelationConfiguration;\n}\nexport interface HasOneRelationConfigurationMap {\n  readonly [name: string]: HasOneRelationConfiguration;\n}\nexport interface BelongsToRelationConfigurationMap {\n  readonly [name: string]: BelongsToRelationConfiguration;\n}\nexport interface RelationConfiguration {\n\n}\nexport interface HasManyRelationConfiguration extends RelationConfiguration {\n  readonly field?: string;\n  readonly collection?: string;\n  readonly references_field?: string;\n  // Polymorphism\n  readonly polymorphic?: boolean;\n  readonly as?: string; // block\n  // Inline\n  readonly inline?: boolean;\n  readonly inline_field?: string;\n}\nexport interface HasOneRelationConfiguration extends RelationConfiguration {\n  readonly field?: string;\n  readonly collection?: string;\n  readonly references_field?: string;\n  // Polymorphism\n  readonly polymorphic?: boolean;\n  readonly as?: string; // block\n}\nexport interface BelongsToRelationConfigurationBase extends RelationConfiguration {\n  readonly collection?: string;\n  // Polymorphism\n  readonly polymorphic?: boolean;\n  readonly field?: string; // block_id\n  readonly collection_field?: string; // block_collection\n}\nexport interface NonPolymorphicBelongsToRelationConfiguration extends BelongsToRelationConfigurationBase {\n  readonly polymorphic?: false;\n}\nexport interface PolymorphicBelongsToRelationConfiguration extends BelongsToRelationConfigurationBase {\n  readonly polymorphic: true;\n  readonly field: string;\n}\nexport type BelongsToRelationConfiguration = NonPolymorphicBelongsToRelationConfiguration | PolymorphicBelongsToRelationConfiguration;\nexport interface ActionConfigurationMap {\n  readonly [name: string]: ActionConfiguration;\n}\nexport interface CollectionActionConfigurationMap {\n  readonly [name: string]: CollectionActionConfiguration;\n}\nexport interface CollectionActionConfiguration {\n  readonly method: string;\n  readonly path?: string;\n}\nexport interface ActionConfiguration {\n  readonly method: string;\n  readonly returns_other?: boolean;\n  readonly no_data?: boolean;\n  readonly no_selector?: boolean;\n  readonly path?: string;\n}\n","export { Elpong as default } from './Elpong';\nexport {\n  Scheme,\n  CollectionMap\n} from './Scheme';\nexport {\n  Collection,\n  CollectionActions,\n  GetAllCollectionActionFunction,\n  GetOneCollectionActionFunction,\n  CustomCollectionActionFunction,\n  CollectionArrayOptions,\n  CollectionFindByOptions,\n  FieldsKeyValueMap\n} from './Collection';\nexport {\n  Element,\n  SelectorValue,\n  Fields, Relations, Actions, Snapshots,\n  RelationFunction, ActionFunction\n} from './Element';\nexport { PreElement } from './PreElement';\nexport { ElpongError } from './Errors';\nexport { Snapshot } from './Snapshot';\nexport { Util } from './Util';\nexport {\n  SchemeConfiguration,\n  PreSchemeConfiguration,\n  CollectionConfiguration,\n  CollectionConfigurationMap,\n  CollectionActionConfiguration,\n  CollectionActionConfigurationMap,\n  CollectionConfigurationWithOptionals,\n  CollectionConfigurationMapWithOptionals,\n  FieldConfiguration,\n  FieldConfigurationMap,\n  RelationConfiguration,\n  RelationConfigurationMaps,\n  HasOneRelationConfiguration,\n  HasManyRelationConfiguration,\n  BelongsToRelationConfiguration,\n  HasOneRelationConfigurationMap,\n  HasManyRelationConfigurationMap,\n  BelongsToRelationConfigurationMap,\n  EmbeddedElementFieldConfiguration,\n  BelongsToRelationConfigurationBase,\n  EmbeddedCollectionFieldConfiguration,\n  RelationConfigurationMapsWithOptionals,\n  ActionConfiguration,\n  ActionConfigurationMap,\n  PolymorphicBelongsToRelationConfiguration,\n  NonPolymorphicBelongsToRelationConfiguration\n} from './Configuration';\nexport {\n  AjaxAdapterType\n} from './Ajax'","import { Element } from '../../Element';\nimport { Util } from '../../Util';\n// import { SchemeHelper } from '../SchemeHelper';\nimport { FieldConfigurationMap, FieldConfiguration, EmbeddedElementFieldConfiguration, EmbeddedCollectionFieldConfiguration } from '../../Configuration';\n// import { CollectionHelper } from '../CollectionHelper';\nimport { Collection } from '../../Collection';\n// import { Scheme } from '../../Scheme';\n// import { ElpongError } from '../../Errors';\nimport { EmbeddedElement } from './Fields/EmbeddedElement';\nimport { EmbeddedCollection } from './Fields/EmbeddedCollection';\nimport { PreElement } from '../../PreElement';\n\nexport namespace Fields {\n  export function setup(element: Element, fields_config_map: FieldConfigurationMap, pre_element: PreElement): void {\n    Util.forEach(fields_config_map, (field_config: FieldConfiguration, field_key: string) => {\n      if (field_config.embedded_element) {\n        EmbeddedElement.handle(element, pre_element, field_key, field_config as EmbeddedElementFieldConfiguration);\n      } else if (field_config.embedded_collection) {\n        EmbeddedCollection.handle(element, pre_element, field_key, field_config as EmbeddedCollectionFieldConfiguration);\n      } else {\n        if (!pre_element.hasOwnProperty(field_key)) { return; }\n        let field_value = pre_element[field_key];\n        element.fields[field_key] = field_value;\n      }\n    });\n  }\n}\n","import { Util } from '../../Util';\nimport { HasMany } from './Relations/HasMany';\nimport { HasOne } from './Relations/HasOne';\nimport { Element } from '../../Element';\nimport { RelationConfigurationMaps, HasManyRelationConfiguration, HasOneRelationConfiguration, BelongsToRelationConfiguration } from '../../Configuration';\nimport { BelongsTo } from './Relations/BelongsTo';\n\nexport namespace Relations {\n  export function setup(element: Element, relations_config_maps: RelationConfigurationMaps) {\n    Util.forEach(relations_config_maps.has_many, (relation_config: HasManyRelationConfiguration, relation_collection_name: string) => {\n      HasMany.setup(element, relation_collection_name, relation_config);\n    });\n\n    Util.forEach(relations_config_maps.has_one, (relation_config: HasOneRelationConfiguration, relation_collection_singular_name: string) => {\n      HasOne.setup(element, relation_collection_singular_name, relation_config);\n    });\n\n    Util.forEach(relations_config_maps.belongs_to, (relation_config: BelongsToRelationConfiguration, relation_collection_singular_name: string) => {\n      BelongsTo.setup(element, relation_collection_singular_name, relation_config);\n    });\n  }\n}\n","import { Element } from '../../../Element';\nimport { Collection } from '../../../Collection';\nimport { HasMany } from './HasMany';\nimport { HasOneRelationConfiguration } from '../../../Configuration';\nimport { SchemeHelper } from '../../SchemeHelper';\nimport { Util } from '../../../Util';\n\nexport namespace HasOne {\n  export function setup(element: Element, relation_collection_singular_name: string, relation_config: HasOneRelationConfiguration) {\n    let relation_collection: Collection;\n    let collection = element.collection();\n    let collection_config = element.collection().configuration();\n\n    let scheme = collection.scheme();\n\n    if (relation_config.collection) {\n      relation_collection = scheme.select(relation_config.collection);\n    } else {\n      relation_collection = SchemeHelper.getCollectionBySingularName(scheme, relation_collection_singular_name);\n    }\n\n    return element.relations[Util.camelize(relation_collection_singular_name)] = () =>\n      HasMany.getHasManyRelationFunction(element, collection, relation_config, relation_collection, true)()[0];\n  }\n}\n","import { Element, SelectorValue, isSelectorValue } from '../../../Element';\nimport { Collection } from '../../../Collection';\nimport { Util } from '../../../Util';\nimport { BelongsToRelationConfiguration } from '../../../Configuration';\nimport { SchemeHelper } from '../../SchemeHelper';\n\nexport namespace BelongsTo {\n  export function setup(element: Element, relation_collection_singular_name: string, relation_config: BelongsToRelationConfiguration) {\n    let field_key: string;\n    let relation_collection: Collection;\n    let collection = element.collection();\n\n    // TODO should be reference\n    if (relation_config.polymorphic) {\n      let collection_field_key = relation_config.collection_field ||  `${relation_collection_singular_name}_collection`;\n      field_key = relation_config.field;\n      element.relations[Util.camelize(relation_collection_singular_name)] = () =>\n        getPolymorphicBelongsToElement(element, field_key, collection_field_key, relation_collection_singular_name);\n    } else { // normal\n      let scheme = collection.scheme();\n      if (relation_config.collection) {\n        relation_collection = collection.scheme().select(relation_config.collection);\n      } else {\n        relation_collection = SchemeHelper.getCollectionBySingularName(scheme, relation_collection_singular_name);\n      }\n      field_key = relation_config.field || `${relation_collection_singular_name}_${scheme.configuration().selector}`;\n      element.relations[Util.camelize(relation_collection_singular_name)] = () =>\n        getBelongsToElement(element, relation_collection, field_key);\n    }\n  }\n\n  let getBelongsToElement = (element: Element, relation_collection: Collection, field_key: string): Element|null|undefined => {\n    let selector_value: SelectorValue = element.fields[field_key];\n    if (isSelectorValue(selector_value)) {\n      return relation_collection.find(selector_value) || null;\n    } else {\n      return undefined;\n    }\n  }\n\n  // Gets the polymorphic belongs_to element\n  //\n  // @param {Element} hpe              The element to which the other element belongs\n  // @param {string} field_key                The foreign key, e.g. parent_id.\n  // @param {string} collection_field_key     The field name of the other collection, required, e.g. parent_collection.\n  // @param {string} collection_selector_field The selector name of the other collection, if it was specified, e.g. id. (Will not be looked at if field_key is present)\n  // @param {string} collection_singular_name  e.g. parent\n  //\n  // @return {Element|null}            The related element.\n  let getPolymorphicBelongsToElement = (element: Element, field_key: string, collection_field_key: string, collection_singular_name: string) => {\n    let relation_collection_name = element.fields[collection_field_key];\n    let relation_collection = element.collection().scheme().select(relation_collection_name);\n    if (!field_key) {\n      let selector_key = element.collection().scheme().configuration().selector;\n      field_key = `${collection_singular_name}_${selector_key}`;\n    }\n    let selector_value = element.fields[field_key];\n    return relation_collection.find(selector_value) || null;\n  }\n\n}\n","import { Ajax, AjaxResponse, AjaxData, AjaxHeaders, AjaxPromise } from '../../Ajax';\nimport { ActionConfigurationMap, ActionConfiguration } from '../../Configuration';\nimport { Element, SelectorValue } from '../../Element';\nimport { Util } from '../../Util';\nimport { ElpongError } from '../../Errors';\nimport { ElementHelper } from '../ElementHelper';\nimport { UrlHelper, UrlOptions, UrlHelperElementOptions } from '../UrlHelper';\n\nexport interface ActionOptions {\n  data?: AjaxData;\n  headers?: AjaxHeaders;\n  params?: any;\n}\n\nexport namespace Actions {\n  export function setup(element: Element, actions_config: ActionConfigurationMap) {\n    for (let method of ['get', 'post', 'put', 'delete']) {\n      element.actions[method] = (action_options: ActionOptions) => {\n        return execute(element, method.toUpperCase(), action_options);\n      }\n    }\n\n    Util.forEach(actions_config, (action_config: ActionConfiguration, action_name: string) => {\n      element.actions[Util.camelize(action_name)] = (action_options: ActionOptions) => {\n        if (element.isNew() && !action_config.no_selector) { throw new ElpongError('elenew'); }\n        return executeCustom(element, action_name, action_config, action_options);\n      }\n    });\n  }\n\n  export function execute(element: Element, method: string, action_options: ActionOptions = {}): AjaxPromise {\n    element.snapshots.make(`before_${method.toLowerCase()}`);\n\n    let data;\n    if (action_options.data) {\n      if (method !== 'GET') {\n        data = action_options.data;\n      } else {\n        throw new ElpongError('acgtda');\n      }\n    } else if (method !== 'GET') {\n      data = ElementHelper.toData(element);\n    }\n\n    if (method === 'POST') {\n      if (!element.isNew()) { throw new Error('Element is not new'); }\n    } else {\n      if (element.isNew()) { throw new Error('Element is new'); }\n    }\n\n    const url_options: UrlHelperElementOptions = {\n      no_selector: method === 'POST',\n      params: action_options.params || {}\n    }\n\n    let promise = Ajax.executeRequest(\n      UrlHelper.createForElement(element, url_options),\n      method,\n      data,\n      action_options.headers\n    );\n    promise.then((response: AjaxResponse): void => {\n      if (response.data) {\n        element.merge(response.data);\n      }\n      element.snapshots.make(`after_${method.toLowerCase()}`);\n\n      let collection = element.collection();\n\n      if (Util.includes(collection.new_elements, element)) {\n        Util.removeFromArray(collection.new_elements, element);\n        collection.elements.set(element.selector() as SelectorValue, element);\n      }\n    });\n\n    return promise;\n  }\n\n  export function executeCustom(element: Element, action_name: string, action_config: ActionConfiguration, action_options: ActionOptions = {}): AjaxPromise {\n    const method = action_config.method.toUpperCase();\n    element.snapshots.make(`before_${action_name}`);\n\n    let data;\n    if (action_options.data) {\n      if (method !== 'GET') {\n        data = action_options.data;\n      } else {\n        throw new ElpongError('acgtda');\n      }\n    } else if (!action_config.no_data) {\n      data = ElementHelper.toData(element);\n    }\n\n    const url_options: UrlHelperElementOptions = {\n      suffix: action_config.path || action_name,\n      params: action_options.params || {}\n    };\n    url_options.no_selector = action_config.no_selector;\n\n    const promise = Ajax.executeRequest(\n      UrlHelper.createForElement(element, url_options),\n      method,\n      data,\n      action_options.headers\n    );\n    promise.then((response: AjaxResponse) => {\n      let selector_value;\n      if (!action_config.returns_other) {\n        if (response.data) {\n          element.merge(response.data);\n        }\n        element.snapshots.make(`after_${method.toLowerCase()}`);\n      }\n\n      const collection = element.collection();\n\n      if ((selector_value = element.selector()) && Util.includes(collection.new_elements, element)) {\n        Util.removeFromArray(collection.new_elements, element);\n        return collection.elements.set(selector_value, element);\n      }\n    });\n\n    return promise;\n  }\n}\n","import { Util } from '../../Util';\nimport { Snapshot } from '../../Snapshot';\nimport { Element } from '../../Element';\nimport { ElementHelper } from '../ElementHelper';\nimport { ElpongError } from '../../Errors';\n\nexport namespace Snapshots {\n  export function setup(element: Element) {\n    let snapshots = element.snapshots;\n\n    snapshots.list = [];\n\n    snapshots.make = (tag?: string): Snapshot => {\n      return new Snapshot(element, tag);\n    }\n\n    snapshots.lastPersisted = (): Snapshot|undefined => {\n      if (element.isNew()) { return; }\n\n      for (let i = snapshots.list.length - 1; i >= 0 ; i--) {\n        let snapshot = snapshots.list[i];\n        if (Util.includes(['after_post', 'after_put', 'after_get', 'creation'], snapshot.tag)) {\n          return snapshot;\n        }\n      }\n\n      // Util.reverseForEach(element.snapshots.list, function(k: string, v: Snapshot) {\n      //   if ((v.tag === 'after_post') || (v.tag === 'after_put') || (v.tag === 'after_get') || (v.tag === 'creation')) {\n      //     last_persisted_snapshot = v;\n      //     return Util.BREAK;\n      //   }\n      // });\n\n      // return last_persisted_snapshot;\n    }\n\n    snapshots.lastWithTag = (tag: string|RegExp): Snapshot|undefined => {\n      let last_snapshot_with_tag: Snapshot|undefined;\n      let list = element.snapshots.list;\n      if (Util.isRegExp(tag)) {\n        for (let i = list.length - 1; i >= 0 ; i--) {\n          let snapshot = list[i];\n          if (snapshot.tag) {\n            if (tag.test(snapshot.tag)) {\n              return snapshot;\n            }\n          }\n        }\n      } else {\n        for (let i = list.length - 1; i >= 0 ; i--) {\n          let snapshot = list[i];\n          if (tag === snapshot.tag) {\n            return snapshot;\n          }\n        }\n      }\n      return last_snapshot_with_tag;\n    }\n\n    snapshots.last = (): Snapshot => {\n      let list = element.snapshots.list;\n      return list[list.length - 1];\n    }\n\n    snapshots.undo = (id?: number|string|RegExp): Element => {\n      if (id == null) { id = 0; }\n      if (Util.isInteger(id)) {\n        let list = element.snapshots.list;\n        if (id < 0 || id > list.length) {\n          throw new ElpongError('elesti', `${id}`);\n        } else {\n          let snapshot = list[element.snapshots.current_index - id];\n          snapshot.revert();\n        }\n      } else {\n        let snapshot;\n        if (snapshot = snapshots.lastWithTag(id)) {\n          snapshot.revert();\n        } else {\n          throw new ElpongError('elesnf', `${id}`);\n        }\n      }\n      return element;\n    }\n\n    snapshots.isPersisted = () => {\n      let snapshot = snapshots.lastPersisted();\n      if (!snapshot) { return false; }\n      return Util.equalsJSON(element.fields, snapshot.data);\n    }\n  }\n}\n\n// import Element from '../../Element';\n//\n// const setupSnapshots = (element: Element) => {\n//   element.snapshots = {\n//     getLastPersisted() {\n//       if (element.isNew()) { return null; }\n//       let last_persisted_snapshot = null;\n//       Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//         if ((v.tag === 'after_post') || (v.tag === 'after_put') || (v.tag === 'after_get') || (v.tag === 'creation')) {\n//           last_persisted_snapshot = v;\n//           return Util.BREAK;\n//         }\n//       });\n//\n//       return last_persisted_snapshot;\n//     },\n//\n//     getLastWithTag(tag) {\n//       let last_snapshot_with_tag = null;\n//       if (HP.Util.isRegex(tag)) {\n//         HP.Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//           if (tag.test(v.tag)) {\n//             last_snapshot_with_tag = v;\n//             return HP.Util.BREAK;\n//           }\n//         });\n//       } else {\n//         HP.Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//           if (v.tag === tag) {\n//             last_snapshot_with_tag = v;\n//             return HP.Util.BREAK;\n//           }\n//         });\n//       }\n//       return last_snapshot_with_tag;\n//     },\n//\n//     getLast() {\n//       let last_snapshot = null;\n//       HP.Util.reverseForEach(hpe.snapshots.list, function(k, v) {\n//         last_snapshot = v;\n//         return HP.Util.BREAK;\n//       });\n//       return last_snapshot;\n//     },\n//\n//     make(tag) {\n//       let date = Date.now();\n//       let list = hpe.snapshots.list =\n//         HPP.Helpers.Snapshot.removeAfter(hpe.last_snapshot_time, hpe.snapshots.list);\n//       if (list[date]) {\n//         return hpe.snapshots.make(tag); // loop until 1ms has passed\n//       }\n//       let s = list[date] = {\n//         tag,\n//         time: date,\n//         data: HPP.Helpers.Element.getFields(hpe),\n//         revert() {\n//           return hpe.undo(date);\n//         }\n//       };\n//       hpe.last_snapshot_time = date;\n//       return s;\n//     },\n//\n//     list: {}\n//   };\n// }\n","import { Collection } from '../../Collection';\nimport { Ajax, AjaxResponse, AjaxData, AjaxHeaders, AjaxPromise } from '../../Ajax';\nimport { UrlHelper, UrlOptions, UrlHelperOptions } from '../UrlHelper';\nimport { SelectorValue } from '../../Element';\nimport { CollectionActionConfiguration } from '../../Configuration';\nimport { ElpongError } from '../../Errors';\nimport { PreElement } from '../../PreElement';\n\nexport interface CollectionActionOptions {\n  data?: AjaxData;\n  headers?: AjaxHeaders;\n  params?: any;\n}\n\nexport namespace CollectionActions {\n  export function executeGetAll(collection: Collection, action_options: CollectionActionOptions = {}): AjaxPromise {\n    if (!action_options) { action_options = {}; }\n    if (action_options.data) {\n      throw new ElpongError('acgtda');\n    }\n\n    let promise = Ajax.executeRequest(\n      UrlHelper.createForCollection(collection, {params: action_options.params || {}}),\n      'GET',\n      undefined,\n      action_options.headers\n    );\n    promise.then((response: AjaxResponse) => {\n      response.data.map((pre_element: PreElement) => {\n        collection.buildOrMerge(pre_element);\n      });\n    });\n    return promise;\n  }\n\n  export function executeGetOne(collection: Collection, selector_value: SelectorValue, action_options: CollectionActionOptions = {}) {\n    if (action_options.data) {\n      throw new ElpongError('acgtda');\n    }\n\n    const url_options: UrlHelperOptions = {\n      suffix: selector_value as string,\n      params: action_options.params || {}\n    }\n\n    let promise = Ajax.executeRequest(\n      UrlHelper.createForCollection(collection, url_options),\n      'GET',\n      undefined,\n      action_options.headers\n    );\n    promise.then((response: AjaxResponse) => {\n      if (response.data) {\n        let selector_key = collection.scheme().configuration().selector;\n        if (response.data[selector_key] !== selector_value) {\n          throw new ElpongError('elesnm', `${response.data[selector_key]} != ${selector_value}`)\n        }\n        collection.buildOrMerge(response.data);\n      }\n    });\n    return promise;\n  }\n\n  export function executeCustom(collection: Collection, action_name: string, action_config: CollectionActionConfiguration, action_options?: CollectionActionOptions) {\n    if (!action_options) { action_options = {}; }\n    let data = action_options.data;\n\n    let method = action_config.method.toUpperCase();\n\n    return Ajax.executeRequest(\n      UrlHelper.createForCollection(collection, {suffix: action_config.path || action_name, params: action_options.params}),\n      method,\n      data,\n      action_options.headers\n    );\n  }\n}\n","import { Util } from './Util';\n\ndeclare const Map: any;\n\nexport type FakeMapKey = string|number;\n\nconst supportsMap = typeof Map !== 'undefined' && (new Map()).values;\n\nexport class FakeMap {\n  readonly hasRealMap: boolean;\n  readonly map: any;\n\n  constructor() {\n    // in IE 11, Map#values doesn't exist. Don't bother about that.\n    this.hasRealMap = supportsMap;\n    this.map = supportsMap ? new Map() : {};\n  }\n\n  get(k: FakeMapKey): any {\n    return supportsMap ? this.map.get(k) : this.map[k];\n  }\n\n  set(k: FakeMapKey, v: any): this {\n    if (supportsMap) { this.map.set(k, v) } else { this.map[k] = v };\n    return this;\n  }\n\n  has(k: FakeMapKey): boolean {\n    return supportsMap ? this.map.has(k) : !!this.map[k];\n  }\n\n  values(): any[] {\n    // if Map is there, Array.from should also be there\n    return supportsMap ? (Array as any as FakeArrayConstructor).from(this.map.values()) : Util.values(this.map);\n  }\n\n  delete(k: FakeMapKey): void {\n    if (supportsMap) { this.map.delete(k) } else { delete this.map[k]; }\n  }\n}\n\nexport interface FakeString {\n  startsWith(searchString: string, position?: number): boolean;\n  endsWith(searchString: string, endPosition?: number): boolean;\n}\n\nexport interface FakeArrayConstructor {\n  from<T>(arrayLike: ArrayLike<T>): Array<T>;\n}\n"],"sourceRoot":""}